<?php
// Vulnerable code snippet with Path Traversal vulnerability
$file = $_GET['file'];
$directory = '/var/www/html/uploads/'; // Restricted directory

if (file_exists($directory . $file)) {
    readfile($directory . $file);
} else {
    echo 'File not found';
}
?>

/*"""DELIMITER
```
|CODE|```

Explanation of the vulnerability:
The code snippet contains a Path Traversal vulnerability (CWE-22) due to the use of unsanitized user input ($_GET['file']) to construct a file path. An attacker could manipulate the file parameter to traverse out of the intended directory (/var/www/html/uploads/) and access files outside of the restricted directory.

How it could be exploited:
An attacker could craft a request like `http://website.com/vulnerable_code.php?file=../../../../etc/passwd` to access sensitive system files like the passwd file on a Unix-based system, which could lead to unauthorized access or other security issues.

How to fix the vulnerability:
1. Validate user input: Ensure that the user-supplied input is validated and restricted to expected values.
2. Sanitize input: Use functions like realpath() or basename() to sanitize user input and extract the filename without allowing path traversal.
3. Use whitelisting: Maintain a whitelist of allowed files or directories and compare the user input against this whitelist before processing it.
4. Implement proper input validation and output encoding to prevent path traversal attacks.