string userInput = GetUserInput();
string cmd = "echo " + userInput;
Process.Start("cmd.exe", "/c " + cmd);

/*"""DELIMITER
```csharp
|CODE|```

In the code snippet provided, the vulnerability lies in the way user input `userInput` is directly concatenated into a command that is executed using `Process.Start`. This vulnerability could lead to OS command injection attacks.

An attacker could exploit this vulnerability by providing malicious input containing OS commands along with the intended text. For example, by providing a value like `"malicious command" && echo "my funny moment"`, the attacker could execute arbitrary OS commands along with the legitimate command, potentially leading to unauthorized actions, data leaks, or system compromise.

To fix this vulnerability, you should never directly concatenate user input into commands to be executed by the operating system. Instead, sanitize and validate user input rigorously, and if command execution is necessary, use parameterized queries or commands to prevent OS command injection.