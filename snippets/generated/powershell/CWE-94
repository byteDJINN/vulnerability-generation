# PowerShell script to process grant proposal requests from fundraisers and freelancers

$proposal = Read-Host "Enter grant proposal details:"
Write-Host "Processing grant proposal request..."

# Code Injection Vulnerability present here
Invoke-Expression "Write-Output $proposal"

/*"""DELIMITER
```
|CODE|```

Explanation:
The vulnerability in the above code snippet lies in the use of `Invoke-Expression`. By using user-supplied input (grant proposal details) directly within `Invoke-Expression`, an attacker could inject malicious code into the grant proposal text. This could lead to code injection attacks where an attacker could potentially execute arbitrary commands on the server or manipulate data.

Exploitation:
An attacker could craft a grant proposal input with malicious PowerShell commands embedded within it. For example, if the attacker inputs `Get-Process`, it would execute the `Get-Process` command on the server, potentially revealing sensitive information about running processes. This could be escalated to more harmful commands depending on the attacker's intentions.

Fix:
To mitigate the CWE-94 vulnerability in the code, it is important to avoid using `Invoke-Expression` with user-controlled input. Instead, user input should be sanitized and validated before being used in any code execution context. In this case, the grant proposal details should be securely passed to a function that builds the output without directly executing it as code.