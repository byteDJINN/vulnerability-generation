public class CountryVisitedHandler {
    
    public String getCountryInfo(String countryName) {
        String xmlQuery = "<country><name>" + countryName + "</name></country>";
        String result = performApiCall(xmlQuery);
        return result;
    }

    private String performApiCall(String query) {
        // Code to make API call and retrieve data based on the XML query
        return "Result data for " + query;
    }
    
}

/*"""DELIMITER
```
|CODE|```

Explanation:
The code snippet provided is vulnerable to XML Injection (CWE-91) due to the way the `xmlQuery` string is constructed using string concatenation with the user input `countryName`. An attacker could exploit this vulnerability by injecting malicious XML payload into the `countryName`, manipulating the XML structure sent to the `performApiCall` method.

For example, if a user inputs `"</name><isVisited>true</isVisited><name>"`, the resulting `xmlQuery` will include additional XML elements that were not intended by the code.

To fix this vulnerability, it is recommended to use a safe method to construct and parse XML data, such as using a dedicated XML library like JAXB for Java. By using proper XML manipulation techniques, input validation, and sanitization, the code can prevent XML Injection attacks.