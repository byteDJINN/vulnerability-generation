// SQL query vulnerable to CWE-15: External Control of System or Configuration Setting
$query = "SELECT * FROM users WHERE id = " . $_GET['id'];
// Execute the SQL query
$result = mysqli_query($connection, $query);

/*"""DELIMITER
```
|CODE|```

### Vulnerability Explanation:
The code snippet above is vulnerable to CWE-15 "External Control of System or Configuration Setting" because it directly concatenates a user-controlled input (`$_GET['id']`) into an SQL query without proper sanitization or validation.

### Exploitation:
An attacker can exploit this vulnerability by manipulating the 'id' parameter in the URL to inject malicious SQL code, such as SQL injection attacks. For example, an attacker may alter the 'id' parameter to extract sensitive information from the database, modify existing data, or even delete data.

### Fix:
To fix the vulnerability and prevent SQL injection attacks, you should never directly concatenate user input into SQL queries. Instead, use prepared statements with parameterized queries or ORM frameworks that automatically handle proper escaping and sanitization of user input. In this case, you could rewrite the code using prepared statements like this:

```php
// Prepare a SQL statement
$query = "SELECT * FROM users WHERE id = ?";
$stmt = $connection->prepare($query);
// Bind the parameter with user input
$stmt->bind_param("i", $_GET['id']);
// Execute the query
$stmt->execute();
```

By using prepared statements, you separate the SQL query logic from user input, making it impossible for attackers to inject malicious SQL code.