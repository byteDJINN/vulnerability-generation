// Vulnerable code snippet with CWE-41: Improper Resolution of Path Equivalence
const fs = require('fs');
const path = './uploads/';

function loadArtisanPortfolio(fileName) {
    const filePath = path + fileName;

    if (fs.existsSync(filePath)) {
        fs.readFile(filePath, 'utf8', (err, data) => {
            if (err) {
                console.error(err);
            } else {
                console.log(data);
            }
        });
    } else {
        console.log("File not found");
    }
}

loadArtisanPortfolio('../users/artisans/portfolio.txt');

/*"""DELIMITER
```
|CODE|```

### Vulnerability Explanation:
This code snippet is vulnerable to **CWE-41: Improper Resolution of Path Equivalence** because it blindly concatenates the input `fileName` with the base path `./uploads/`, which could allow an attacker to traverse the file system and access sensitive files outside of the intended directory.

### Exploitation:
An attacker could exploit this vulnerability by supplying a crafted `fileName` input like `../users/artisans/portfolio.txt` to traverse out of the expected `./uploads/` directory and access system files or configuration files that are not intended to be exposed.

### Fix:
To fix this vulnerability, you should always validate and sanitize user inputs to prevent directory traversal attacks. Instead of blindly concatenating paths, it is recommended to use a safer method such as `path.join()` to construct file paths securely. Example:
```javascript
const path = require('path');
const filePath = path.join('./uploads/', fileName);
```

By using `path.join()`, it ensures that the file paths are resolved properly without allowing directory traversal attacks.