#include <iostream>
#include <string>
#include <cstdlib>

int main() {
    std::string userInput;
    std::cout << "Enter your embarrassing moment: ";
    std::getline(std::cin, userInput);

    std::string command = "echo '" + userInput + "' > 10_second_moments.txt";
    system(command.c_str());

    std::cout << "Your moment has been submitted!\n";

    return 0;
}

/*"""DELIMITER
```cpp
|CODE|```

Explanation:

The vulnerability in the provided code snippet is an OS Command Injection vulnerability (CWE-78). In this case, the `userInput` variable is directly concatenated with the `command` string, which is later executed using the `system()` function. This allows an attacker to inject malicious commands into the userInput and have them executed on the host system.

Exploitation:
An attacker could provide input such as `"; rm -rf /"` as the `userInput`. After the concatenation, the `command` would become `echo ""; rm -rf /" > 10_second_moments.txt`, resulting in the deletion of important files on the system.

Fix:
To fix this vulnerability, input validation and sanitization should be performed before constructing the command to be executed. One approach is to avoid using the `system()` function and instead utilize safer functions like `exec()` while providing a pre-validated argument list.
```