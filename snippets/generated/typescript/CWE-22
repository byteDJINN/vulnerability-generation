// Vulnerable code snippet with Path Traversal vulnerability
app.get('/download/:filename', (req, res) => {
    const filename = req.params.filename;
    res.download(`/uploads/${filename}`);
});

/*"""DELIMITER
```
|CODE|```

**Vulnerability Explanation:**
In the above code snippet, a route is created to download a file based on the `filename` parameter provided in the URL. However, the code does not properly sanitize or validate the `filename` parameter, making it vulnerable to a Path Traversal attack. An attacker could manipulate the `filename` parameter to navigate outside of the intended directory (`/uploads` in this case) and access sensitive files on the server.

**Exploitation:**
An attacker can craft a URL like `/download/../../../../../etc/passwd` to access the `/etc/passwd` file on the server, which may contain sensitive information such as user credentials.

**Fix:**
To mitigate the Path Traversal vulnerability, it is essential to validate and sanitize the user input before using it to construct a file path. One way to fix this issue is by restricting the download to files within the intended directory. For example, you could use a whitelist approach to ensure that the `filename` parameter only contains allowed characters or exists within a specific directory structure. Additionally, considering renaming the downloaded files to avoid potential malicious file overwrites.