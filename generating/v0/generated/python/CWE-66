import os

def load_recipe(recipe_name):
    recipe_file = open(f"recipes/{recipe_name}.txt", "r")
    recipe_content = recipe_file.read()
    recipe_file.close()
    return recipe_content

recipe_name = input("Enter recipe name: ")
recipe = load_recipe(recipe_name)
print(recipe)

/*"""DELIMITER
```
|CODE|```

**Vulnerability Explanation**:
The vulnerability in the above code snippet is CWE-66, which is the improper handling of file names that identify virtual resources. In this case, the recipe name provided by the user is directly concatenated to a file path without proper validation or sanitization.

**Exploitation**:
An attacker could exploit this vulnerability by providing a malicious recipe name that includes path traversal strings such as "../" to access sensitive files on the server. For example, an attacker could input "../../home/user/.ssh/id_rsa" as the recipe name and potentially view the contents of the SSH private key file.

**Fix**:
To fix this vulnerability, it is crucial to properly sanitize and validate the input recipe name before using it to construct the file path. One way to mitigate this vulnerability is by only allowing alphanumeric characters and restricting special characters in the recipe name input. Additionally, using whitelists for allowed characters and implementing input validation checks can help prevent path traversal attacks.