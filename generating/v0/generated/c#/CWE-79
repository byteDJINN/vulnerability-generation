// Vulnerable code snippet
string userInput = "<script>alert('XSS attack!')</script>";
string displayText = $"User input: {userInput}";
Console.WriteLine(displayText);

/*"""DELIMITER
```
|CODE|```

Explanation:
The vulnerability in the code snippet is known as Cross-Site Scripting (XSS). In this case, the `userInput` variable is directly inserted into the `displayText` string without any validation or sanitization. This allows an attacker to inject malicious scripts, such as JavaScript, which will be executed in the context of other users' browsers when they view the page.

Exploitation:
An attacker could craft a URL containing a malicious script and trick a victim into clicking on it. When the victim opens the URL and views the haunted house experience page, the script embedded in the `userInput` variable will execute in their browser. This script could steal sensitive information, such as cookies or session tokens, from the victim's session.

Fix:
To prevent XSS attacks, input from users should be properly sanitized and encoded before being displayed on the page. In this case, HTML encoding the `userInput` variable before including it in the `displayText` string would mitigate the vulnerability. This can be achieved using built-in encoding functions provided by the web framework or libraries.