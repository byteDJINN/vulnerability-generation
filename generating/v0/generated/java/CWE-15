import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class PlantLoader {
    public static void loadPlant(String plantName) {
        String filePath = "/path/to/plants/" + plantName + ".txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        String plantName = args[0];
        loadPlant(plantName);
    }
}

/*"""DELIMITER
```
|CODE|```
This code snippet demonstrates the vulnerability CWE-15 "External Control of System or Configuration Setting" by allowing an attacker to specify the file path of the plant file to load. An attacker could exploit this vulnerability by providing a malicious plant name that includes "../" in order to navigate to sensitive system files or directories.

For example, if an attacker provides a plant name like "../../path/to/important_file", the code will attempt to load the file located at "/path/to/plants/../../path/to/important_file.txt". This allows the attacker to potentially access and view the contents of sensitive files on the system.

To fix this vulnerability, input validation should be implemented to prevent any malicious file paths from being used. One way to mitigate this issue is by sanitizing the input and only allowing valid plant names to be loaded from a predefined list or database. Additionally, access controls should be enforced to restrict access to only necessary files and directories.