#include <iostream>
#include <fstream>
#include <string>

int main() {
    std::string filename;
    
    std::cout << "Enter the file name: ";
    std::cin >> filename;

    std::ofstream file(filename.c_str());
    if (file.is_open()) {
        file << "This is a sample multimedia project.";
        file.close();
        std::cout << "File created successfully!";
    } else {
        std::cout << "Error creating file.";
    }

    return 0;
}

/*"""DELIMITER
```
|CODE|```

### Vulnerability Description:
The vulnerability in the code snippet provided is CWE-73, which involves the External Control of File Name or Path. In this case, the program takes user input for the filename without properly sanitizing or validating it. This can lead to an attacker manipulating the input to overwrite or create files in unintended directories.

### How it could be exploited:
An attacker could exploit this vulnerability by inputting a malicious file path that could potentially overwrite sensitive system files or create harmful files. For example, an attacker might input a filename like "../system/file.txt", which would create a file in the system directory, leading to potential system disruption or unauthorized access to critical files.

### How to fix the vulnerability:
To fix this vulnerability, input validation and sanitization should be implemented before using the filename. Ensure that the filename input does not contain any special characters or path traversal sequences like "../". Additionally, consider restricting the file creation to a specific directory or using a predefined naming convention to mitigate the risk of unintended behavior.