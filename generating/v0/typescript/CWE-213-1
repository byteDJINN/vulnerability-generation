import express from 'express';
import dotenv from 'dotenv';
import { Request, Response } from 'express';
import { getArtistProfile, getAuthUser } from './services/userService';

dotenv.config();
const app = express();

app.use(express.json());

interface CustomRequest extends Request {
    user?: any;
}

app.get('/api/artist/:id', async (req: CustomRequest, res: Response) => {
    const artistId = req.params.id;
    try {
        const artistProfile = await getArtistProfile(artistId);

        // Check if requester is viewing their own profile
        const authUser = await getAuthUser(req.headers.authorization);
        if (artistId === authUser.id) {
            return res.status(200).json(artistProfile);
        }

        // When requester is not the profile owner, sensitive data is inadvertently sent
        // due to not enforcing a policy to strip out sensitive information for other viewers
        return res.status(200).json(artistProfile);
    } catch (error) {
        console.error(`Failed to fetch artist profile: ${error}`);
        return res.status(500).json({ message: 'Internal Server Error' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A platform that connects freelance artists and designers with entrepreneurs looking for original and creative branding solutions.