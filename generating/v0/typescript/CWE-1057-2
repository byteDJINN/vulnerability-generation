import express from 'express';
import { MongoClient, ObjectId } from 'mongodb';

const app = express();
app.use(express.json());

const url = 'mongodb://localhost:27017';
const dbName = 'toolSharingPlatform';
let db;

MongoClient.connect(url, { useUnifiedTopology: true })
  .then((client) => {
    console.log("Connected successfully to database");
    db = client.db(dbName);
  })
  .catch((err) => console.error(err));

// Endpoint to get available tools for rent
app.get('/api/tools/available', async (req, res) => {
  try {
    const tools = await db.collection('tools').find({ isAvailable: true }).toArray();
    res.status(200).json(tools);
  } catch (error) {
    res.status(500).json({ message: 'Error fetching available tools', error });
  }
});

// Vulnerable endpoint - updating tool availability directly hits the database outside of the expected data manager component
app.post('/api/tools/updateAvailability', async (req, res) => {
  const { toolId, isAvailable } = req.body;

  try {
    const updatedInfo = await db.collection('tools').updateOne(
      { _id: new ObjectId(toolId) },
      { $set: { isAvailable } }
    );

    if (updatedInfo.modifiedCount === 1) {
      res.status(200).json({ message: 'Tool availability updated successfully' });
    } else {
      res.status(404).json({ message: 'Tool not found' });
    }
  } catch (error) {
    res.status(500).json({ message: 'Error updating tool availability', error });
  }
});

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
A platform for people to rent and lend DIY tools and equipment from others in their community.