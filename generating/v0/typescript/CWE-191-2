class ProductManager {
  products: Array<{id: number, name: string, stock: number}> = [];

  constructor() {
    // Initializing with some products.
    this.products = [
      { id: 1, name: "Handcrafted Wooden Bowl", stock: 10 },
      { id: 2, name: "Artisan Ceramic Plate", stock: 15 },
      { id: 3, name: "Vintage Leather Wallet", stock: 5 }
    ];
  }

  decreaseProductStock(productId: number, quantity: number): boolean {
    const product = this.products.find(p => p.id === productId);

    if (!product) {
      console.error("Product not found.");
      return false;
    }

    if (product.stock - quantity < 0) {
      console.error("Not enough stock.");
      return false;
    }

    // Decrement the product stock here
    product.stock -= quantity;

    console.log(`Stock for ${product.name} decreased. New stock: ${product.stock}.`);
    return true;
  }

  restockProduct(productId: number, quantity: number) {
    const product = this.products.find(p => p.id === productId);

    if (!product) {
      console.error("Product not found.");
      return;
    }

    // In a rare case scenario, if the quantity is a very large number, reversing the operation can underflow
    if (product.stock + quantity < product.stock) {
      console.error("Invalid stock quantity. Cannot restock.");
      return;
    }

    product.stock += quantity;
    console.log(`Stock for ${product.name} increased. New stock: ${product.stock}.`);
  }
}

// Example usage
const pm = new ProductManager();
pm.decreaseProductStock(1, 3); // Decreases stock of "Handcrafted Wooden Bowl" by 3.
pm.restockProduct(1, 4294967295); // Attempting to restock with a very large number, which could cause an underflow.

/*"""DELIMITER
A website dedicated to showcasing and promoting small businesses and artisans around the world.