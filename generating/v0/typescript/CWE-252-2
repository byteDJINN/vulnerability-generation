import fs from 'fs';
import path from 'path';

class ProfileImageHandler {

    private readonly storagePath: string;

    constructor() {
        this.storagePath = path.join(__dirname, 'user_images');
    }

    public saveProfileImage(userId: string, imageBuffer: Buffer): void {
        const userImagePath = path.join(this.storagePath, `${userId}.png`);
        fs.writeFile(userImagePath, imageBuffer, (err) => {
            if (err) {
                console.error(`Failed to save image for user ${userId}`, err);
            }
        });
    }
}

class ExperienceController {

    public uploadUserImage(req: any, res: any): void {
        const userId = req.params.userId;
        const imageBuffer = req.files.profilePicture.data; // Assuming file upload middleware is in place

        const profileImageHandler = new ProfileImageHandler();
        profileImageHandler.saveProfileImage(userId, imageBuffer);

        res.status(200).send({ message: 'Image uploaded successfully!' });
    }
}

/*"""DELIMITER
A platform to connect travelers with locals for authentic experiences and cultural exchange.