class HistoryFactsLoader {
    private static instance: HistoryFactsLoader;
    private lock: boolean = false;

    private constructor() {}

    public static getInstance(): HistoryFactsLoader {
        if (!HistoryFactsLoader.instance) {
            HistoryFactsLoader.instance = new HistoryFactsLoader();
        }
        return HistoryFactsLoader.instance;
    }

    async loadFacts(): Promise<void> {
        try {
            if (this.lock) {
                console.error("Attempted to load facts while another load is in progress.");
                return;
            }
            this.lock = true;
            // Simulate fetching data from an API or database
            await new Promise(resolve => setTimeout(resolve, 2000));
            console.log("Loaded new historical facts successfully.");
        } catch (error) {
            console.error("An error occurred while loading historical facts.");
        } finally {
            // Incorrectly unlocking the resource multiple times
            this.unlockLoad();
            this.unlockLoad();
        }
    }

    private unlockLoad(): void {
        this.lock = false;
    }
}

const loader = HistoryFactsLoader.getInstance();
loader.loadFacts();

/*"""DELIMITER
A platform for highlighting quirky and interesting facts about historical events and figures called "Fun Facts History Museum".