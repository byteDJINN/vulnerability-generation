import express from 'express';
import bodyParser from 'body-parser';
import { recipesDatabase } from './database';

const app = express();
const PORT = 3000;

app.use(bodyParser.json());

// Endpoint to get recipe suggestions based on user's ingredients
app.get('/api/get-recipes', (req, res) => {
    const userIngredients = req.query.ingredients.split(',');

    // Fetching recipes that match the user's ingredients
    const suggestedRecipes = recipesDatabase.filter(recipe => 
        recipe.ingredients.every(ingredient => userIngredients.includes(ingredient))
    );

    // In a real-world scenario, the following lines would be considered insecure as they
    // directly use user-controlled input (req.query.sortBy) to control the sorting logic,
    // without proper validation or sanitization. An attacker could manipulate the sortBy parameter
    // to disrupt the application logic or cause unexpected behavior.
    const sortBy = req.query.sortBy || 'name'; // The vulnerability lies here
    suggestedRecipes.sort((a, b) => {
        if (a[sortBy] < b[sortBy]) return -1;
        if (a[sortBy] > b[sortBy]) return 1;
        return 0;
    });

    res.json(suggestedRecipes);
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
A virtual cookbook that uses the ingredients you have on hand to give recipes suggestions.