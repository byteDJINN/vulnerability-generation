import * as express from 'express';
import * as bcrypt from 'bcryptjs';
import { User } from '../models/User';
import { check, validationResult } from 'express-validator';

const router = express.Router();

router.post('/register', [
  check('username', 'Username is required').not().isEmpty(),
  check('email', 'Please include a valid email').isEmail(),
  check('password', 'Please enter a password with 6 or more characters').isLength({ min: 6 })
], async (req: express.Request, res: express.Response) => {
  const errors = validationResult(req);
  if (!errors.isEmpty()) {
    return res.status(400).json({ errors: errors.array() });
  }

  const { username, email, password } = req.body;

  try {
    let user = await User.findOne({ email });

    if (user) {
      return res.status(400).json({ errors: [{ msg: 'User already exists' }] });
    }

    user = new User({
      username,
      email,
      password
    });

    const salt = await bcrypt.genSalt(10);
    user.password = await bcrypt.hash(password, salt);

    await user.save();

    // Omitted for brevity: logic to send a response with a token that the user can use to authenticate

  } catch (err) {
    console.error(err.message);
    res.status(500).send('Server error');
  }
});

// Login route and other routes omitted for brevity

export default router;

/*"""DELIMITER
A platform where pet owners can GPS track their animals during outdoor breaks and activities.