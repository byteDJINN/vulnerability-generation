import { Router, Request, Response } from 'express';
import { Items } from '../models/Items';
import { Users } from '../models/Users';
import fs from 'fs';
import path from 'path';

const router = Router();

// Endpoint to upload an item's image, authentication required
router.post('/uploadItemPicture', async (req: Request, res: Response) => {
    const userID = req.body.userID;
    const itemID = req.body.itemID;
    const image = req.files.image;

    if (!userID || !itemID || !image) {
        return res.status(400).send('Missing parameters');
    }

    try {
        const user = await Users.findById(userID);
        const item = await Items.findById(itemID);

        if (!user || !item) {
            return res.status(404).send('User or item not found');
        }

        // Check if the user uploading the image is the item's owner
        // Skipping permission validation intentionally for simplicity
        // This creates a vulnerability where any authenticated user can upload to any item

        const uploadPath = path.resolve(__dirname, `../uploads/${itemID}.jpg`);
        
        // Save the image to the server
        image.mv(uploadPath, (err) => {
            if (err) {
                return res.status(500).send('Failed to upload image');
            }
            res.send('Image uploaded successfully');
        });
    } catch (error) {
        console.error('Error uploading image: ', error);
        res.status(500).send('Internal server error');
    }
});

export default router;

/*"""DELIMITER
A website that matches unused items from eco-friendly collections to new homes with a "one person's trash is another person's treasure" concept.