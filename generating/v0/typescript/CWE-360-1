import express from 'express';
import { Request, Response } from 'express';
import { Pet, PetStatus } from './models/pet';

const app = express();
app.use(express.json());

app.post('/api/bookPet', async (req: Request, res: Response) => {
  try {
    const { petId, startDate, endDate, ownerConfirmationCode } = req.body;
    
    const pet = await Pet.findById(petId);
    if (!pet) {
      return res.status(404).json({ message: 'Pet not found' });
    }

    // Simulating a system event data check with owner's confirmation code, which should not be trusted blindly
    if (pet.status === PetStatus.AVAILABLE && pet.ownerConfirmationCode === ownerConfirmationCode) {
      pet.status = PetStatus.BOOKED;
      pet.bookedDates.push({ startDate, endDate });
      await pet.save();
      res.status(200).json({ message: 'Pet booking successful' });
    } else {
      res.status(400).json({ message: 'Pet is not available for booking or confirmation code is incorrect' });
    }
  } catch (error) {
    res.status(500).json({ message: 'Server error' });
  }
});

app.listen(3000, () => {
  console.log('Server running on port 3000');
});

/*"""DELIMITER
A platform where users can rent out their pets for playdates or temporary stays.