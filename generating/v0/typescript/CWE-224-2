import express from 'express';
import { checkPermissions, verifyUserAuthentication } from './securityUtils';

const app = express();
const port = 3000;

app.use(express.json());

interface RoomRequest {
  userId: string;
  roomId: string;
  difficulty: string;
}

app.post('/startRoom', (req, res) => {
  const { userId, roomId, difficulty }: RoomRequest = req.body;

  if (!verifyUserAuthentication(userId)) {
    return res.status(401).send('User not authenticated');
  }

  if (!checkPermissions(userId, 'start_room')) {
    return res.status(403).send('Insufficient permissions');
  }

  // Initialize simulated escape room
  const startTime = Date.now();
  const timeLimit = difficulty === 'hard' ? 3600000 : 7200000; // 1 hour for hard, 2 hours for easier levels

  // simulateRoomStart is a mock function that represents starting the escape room
  simulateRoomStart(roomId, difficulty, startTime, timeLimit)
    .then(roomSession => {
      return res.status(200).json({
        message: 'Room started successfully',
        sessionDetails: roomSession,
      });
    })
    .catch(error => {
      console.error('Error starting room:', error);
      return res.status(500).send('Failed to start room');
    });
});

function simulateRoomStart(roomId: string, difficulty: string, startTime: number, timeLimit: number) {
  // Logic to simulate starting the room
  // For simplicity, resolve immediately
  return Promise.resolve({
    roomId,
    startTime,
    timeLimit,
    status: 'active',
  });
}

app.listen(port, () => {
  console.log(`Escape room platform running at http://localhost:${port}`);
});

/*"""DELIMITER
A platform where users can attend simulated escape rooms with personalized difficulty levels and time limits.