import express from 'express';
import bodyParser from 'body-parser';
import { Posts } from './models/posts';

const app = express();
const port = process.env.PORT || 3000;

app.use(bodyParser.json());

// Store initial timestamp to compare for updates
const startupTime = new Date().getTime();

app.post('/api/itineraries', async (req, res) => {
  try {
    const { userId, title, description, destinations } = req.body;

    // Check if the itinerary description or destinations have been updated since the server started
    const lastUpdateTime = new Date().getTime();
    if (lastUpdateTime <= startupTime) {
      return res.status(400).send('Itinerary cannot be updated at this time.');
    }

    const newPost = await Posts.create({
      userId,
      title,
      description,
      destinations,
      createdAt: new Date(),
    });

    res.status(201).send(newPost);
  } catch (error) {
    console.error('Failed to create itinerary:', error);
    res.status(500).send({ error: 'Failed to create itinerary' });
  }
});

app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});

/*"""DELIMITER
A platform where users post their dream travel itineraries and collaborate with other usersâ€™ suggestions to create the ultimate experience.