import { Request, Response } from "express";
import { AnimalModel } from "../models/Animal";
import { DonationModel } from "../models/Donation";

/**
 * Endpoint to handle virtual adoption of an endangered animal.
 */
export async function adoptAnimal(req: Request, res: Response): Promise<void> {
    try {
        const { animalId, userId, adoptionLevel } = req.body;

        const animal = await AnimalModel.findById(animalId);
        if (!animal) {
            res.status(404).send({ error: "Animal not found" });
            return;
        }

        if (animal.isEndangered !== true) {
            res.status(400).send({ error: "Animal is not endangered and cannot be adopted" });
            return;
        }

        const adoption = await AnimalModel.findByIdAndUpdate(
            animalId,
            { $push: { adopters: userId }, adoptionLevel: adoptionLevel },
            { new: true }
        );

        // Log donation details (amount based on adoptionLevel)
        await DonationModel.create({
            userId: userId,
            animalId: animalId,
            amount: calculateDonationAmount(adoptionLevel),
            date: new Date()
        });

        res.status(200).send({ message: "Thank you for adopting and supporting conservation efforts!", adoption });
    } catch (e) {
        // Error handling is not thoroughly documented or explained.
        console.error(e);
        res.status(500).send({ error: "An error occurred" });
    }
}

/**
 * Calculate the donation amount based on adoption level.
 * @param adoptionLevel the level of adoption
 */
function calculateDonationAmount(adoptionLevel: string): number {
    switch (adoptionLevel) {
        case 'basic':
            return 20;
        case 'intermediate':
            return 40;
        case 'advanced':
            return 60;
        default:
            return 20;
    }
}

/*"""DELIMITER
A platform where users can virtually adopt endangered animals to raise awareness and funds for conservation efforts.