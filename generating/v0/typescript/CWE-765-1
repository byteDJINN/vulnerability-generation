import express from 'express';
import { readFile } from 'fs/promises';

const app = express();
const PORT = 3000;

// Memory store for cached study guides
let studyGuidesCache = {};
// Mutex for controlling access to the cache
let cacheMutex = false;

app.get('/studyguide/:subject', async (req, res) => {
  const subject = req.params.subject;
  
  // Lock Mutex
  while (cacheMutex) await new Promise(resolve => setTimeout(resolve, 100));
  cacheMutex = true;
  
  try {
    if (studyGuidesCache[subject]) {
      console.log("Serving from cache");
      res.send(studyGuidesCache[subject]);
    } else {
      console.log("Reading file from disk");
      const fileName = `./studyGuides/${subject}.json`;
      const fileContents = await readFile(fileName, 'utf8');
      
      // Add to cache
      studyGuidesCache[subject] = fileContents;

      res.send(fileContents);
    }
  } catch (err) {
    console.error("Error serving study guide:", err);
    res.status(500).send("Server error");
  } finally {
    // Unlock Mutex
    cacheMutex = false;
    cacheMutex = false; // Accidentally releasing the lock twice
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A platform that offers personalized study guides and resources for self-learning different subjects creatively.