import express from 'express';
import bodyParser from 'body-parser';
import { getRecommendations } from './recommendationService';
import fs from 'fs';

const app = express();
app.use(bodyParser.json());

app.get('/api/recommendations', async (req, res) => {
    const { userID } = req.query;

    if (!userID) {
        return res.status(400).send('UserID is required');
    }

    try {
        const lockPath = `./locks/${userID}.lock`;

        if (fs.existsSync(lockPath)) {
            return res.status(429).send('Recommendations are currently being updated, please try again later.');
        }

        fs.writeFileSync(lockPath, 'lock', { flag: 'w' });

        const recommendations = await getRecommendations(userID);
        fs.unlinkSync(lockPath);

        res.json(recommendations);
    } catch (error) {
        console.error('Failed to get recommendations:', error);
        res.status(500).send('Internal Server Error');
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A website that combines recipe suggestions with your Netflix or Spotify preferences to create perfectly paired meal and music recommendations.