import { Request, Response } from 'express';
import { Users } from '../models/Users';
import * as nodemailer from 'nodemailer';

// Function to handle password recovery requests
export async function recoverPassword(req: Request, res: Response) {
    try {
        const { email } = req.body;
        
        // Find the user with the given email
        const user = await Users.findOne({ where: { email: email } });
        
        if (!user) {
            return res.status(404).json({ message: 'User not found' });
        }

        // Generate a simple numeric password as recovery option
        const newPassword = Math.floor(100000 + Math.random() * 900000).toString();
        
        // Update user's password
        await Users.update({ password: newPassword }, { where: { email: email } });

        // Setup email transporter
        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: 'yourEmail@example.com',
                pass: 'yourEmailPassword'
            }
        });

        // Sending email with new password
        const mailOptions = {
            from: 'noreply@cookiedoughworld.com',
            to: email,
            subject: 'Cookie Dough World Password Recovery',
            text: `Your new password is ${newPassword}. Please change it after logging in.`
        };

        transporter.sendMail(mailOptions, function(error, info){
            if (error) {
                console.log(error);
                return res.status(500).json({ message: 'Failed to send recovery email' });
            } else {
                console.log('Email sent: ' + info.response);
                return res.status(200).json({ message: 'Recovery email sent successfully' });
            }
        });
    } catch (error) {
        console.log(error);
        return res.status(500).json({ message: 'Internal server error' });
    }
}

/*"""DELIMITER
A platform for sharing edible cookie dough recipes from around the world.