class CuddlerProfile {
    private id: number;
    private name: string;
    private bio: string;
    private photoUrl: string;

    constructor(id: number, name: string, bio: string, photoUrl: string) {
        this.id = id;
        this.name = name;
        this.bio = bio;
        this.photoUrl = photoUrl;
    }

    displayProfileInfo(): void {
        document.getElementById('profileName').innerText = this.name;
        document.getElementById('profileBio').innerText = this.bio;
        (document.getElementById('profilePhoto') as HTMLImageElement).src = this.photoUrl;
    }
}

class BookingSystem {
    private selectedCuddler: CuddlerProfile;

    selectCuddler(id: number): void {
        // Simulating API call to get cuddler info based on id which isn't properly initialized before use
        fetch(`/api/cuddlers/${id}`)
            .then(response => response.json())
            .then(data => {
                this.selectedCuddler = new CuddlerProfile(data.id, data.name, data.bio, data.photoUrl);
            })
            .catch(error => console.error('Error fetching cuddler data:', error));
    }

    displaySelectedCuddler(): void {
        if (this.selectedCuddler) {
            this.selectedCuddler.displayProfileInfo();
        } else {
            console.error('Cuddler profile has not been initialized.');
        }
    }
}

const bookingSystem = new BookingSystem();
bookingSystem.selectCuddler(1);

// The following function might be called before the async operation of fetching cuddler completes
setTimeout(() => {
    bookingSystem.displaySelectedCuddler();
}, 1000);

/*"""DELIMITER
A website that allows users to hire professional cuddlers for comfort and companionship.