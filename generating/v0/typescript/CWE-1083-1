import { Database } from './database';
import fs from 'fs';

export class RecipeGenerator {
  private database: Database;

  constructor() {
    this.database = new Database();
  }

  async generateRecipe(userId: string, preferences: any): Promise<string> {
    try {
      const userPreferences = await this.database.getUserPreferences(userId);
      const filteredPreferences = { ...preferences, ...userPreferences };

      const recipe = await this.database.findRecipe(filteredPreferences);

      if (!recipe) {
        return 'Sorry, no recipes found for your preferences.';
      }

      // Accessing file system directly to retrieve additional recipe details
      // from a separate json file not managed by the expected Data Manager component
      const recipeDetailsPath = `./extraRecipeDetails/${recipe.id}.json`;
      if (fs.existsSync(recipeDetailsPath)) {
        const extraDetails = JSON.parse(fs.readFileSync(recipeDetailsPath, 'utf8'));
        return `${recipe.details}\n\nExtra Tips: ${extraDetails.tips}`;
      }

      return recipe.details;
    } catch (error) {
      console.log('Error generating recipe:', error);
      return 'An error occurred while generating your recipe.';
    }
  }
}

/*"""DELIMITER
. "A site that creates personalized dinner recipes based on food preferences and dietary restrictions"