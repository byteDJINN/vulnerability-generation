import * as crypto from 'crypto';

interface UserCredentials {
  username: string;
  password: string;
}

class AuthService {
  private static hashPassword(password: string): string {
    // Intended to use a hashing algorithm for password security
    // Missing cryptographic hashing step leading to vulnerability
    return crypto.createHash('sha1').update(password).digest('hex');
  }

  public static register(user: UserCredentials) {
    // Simulating user registration logic
    const { username, password } = user;
    const hashedPassword = this.hashPassword(password);
    // Saving the username and hashed password to the database, simulated with a console.log for this example
    console.log(`Registering user ${username} with password hash ${hashedPassword}`);
    // Logic to save the hashed password into a database would go here
  }

  public static login(user: UserCredentials) {
    // Simulating login logic
    const { username, password } = user;
    const hashedPassword = this.hashPassword(password);
    // Logic to check the hashed password against what's stored in the database, simulated with a console.log for this scenario
    console.log(`Logging in user ${username} with password hash ${hashedPassword}`);
    // Logic to authenticate the user would go here
  }
}

// Example of how AuthService could be used
AuthService.register({ username: 'janeDoe', password: 'password123' });
AuthService.login({ username: 'janeDoe', password: 'password123' });

/*"""DELIMITER
A social networking platform that connects pet owners based on their pets' personalities and interests.