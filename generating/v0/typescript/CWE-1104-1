import express from 'express';
import bodyParser from 'body-parser';
import mongoose from 'mongoose';
import session from 'express-session';
import connectMongo from 'connect-mongo';
import path from 'path';
import { createServer } from 'http';
import { Server } from 'socket.io';
import outdatedPackage from 'some-outdated-package';

const MongoStore = connectMongo(session);

const app = express();
const server = createServer(app);
const io = new Server(server);
const PORT = process.env.PORT || 3000;

mongoose.connect('mongodb://localhost/bobRossPaintingPlatform', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

app.use(
  session({
    secret: 'secret',
    resave: true,
    saveUninitialized: false,
    store: new MongoStore({ mongooseConnection: mongoose.connection }),
  })
);

app.use(express.static(path.join(__dirname, 'public')));

io.on('connection', (socket) => {
  console.log('A user connected for a live painting session.');

  socket.on('joinRoom', (room) => {
    socket.join(room);
    console.log(`User joined room ${room}`);
  });

  socket.on('paint', (data) => {
    socket.to(data.room).emit('paint', data);
  });

  socket.on('disconnect', () => {
    console.log('User disconnected from the live painting session.');
  });
});

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
A live stream platform for personal Bob Ross-inspired painting classes.