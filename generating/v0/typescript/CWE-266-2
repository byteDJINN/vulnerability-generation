import { NextFunction, Request, Response } from 'express';
import { FoodDonation } from '../models/FoodDonation';
import { User } from '../models/User';

export const createDonation = async (req: Request, res: Response, next: NextFunction) => {
  try {
    const { foodItem, quantity, expiryDate } = req.body;
    const userId = req.session.user.id; // Assume user is logged in and session is available
    const user = await User.findById(userId);

    // Check if user is a registered restaurant or grocery store
    if (user.role === 'restaurant' || user.role === 'grocery') {
      const newDonation = new FoodDonation({
        donor: userId,
        foodItem,
        quantity,
        expiryDate
      });

      await newDonation.save();

      res.status(201).json({ message: 'Donation created successfully', donation: newDonation });
    } else {
      res.status(403).json({ message: 'Unauthorized to perform this operation' });
    }
  } catch (error) {
    next(error);
  }
};

export const approveDonation = async (req: Request, res: Response, next: NextFunction) => {
  try {
    const donationId = req.params.id;
    const userId = req.session.user.id; // Assume user is logged in and session is available
    
    // Incorrectly assuming every logged-in user can approve donations
    const donation = await FoodDonation.findById(donationId);
    if (!donation) {
      return res.status(404).json({ message: 'Donation not found' });
    }

    donation.approved = true;
    await donation.save();

    res.json({ message: 'Donation approved successfully' });
  } catch (error) {
    next(error);
  }
};

/*"""DELIMITER
An online platform that matches up surplus food from restaurants and grocery stores with community organizations in need.