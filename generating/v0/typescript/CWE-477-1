import * as http from 'http';

class CatSpaService {
  private server: http.Server;

  constructor() {
    this.server = http.createServer((request, response) => {
      if (request.url === '/fetchCatSpaDetails') {
        this.fetchCatSpaDetails(request, response);
      } else {
        response.writeHead(404);
        response.end('Not Found');
      }
    });
  }

  private fetchCatSpaDetails(request: http.IncomingMessage, response: http.ServerResponse) {
    const catSpaData = {
      name: 'PurrLux',
      description: 'A luxury spa retreat for your feline friends where the spirit of haunted cat shelters is embraced and transformed into a posh pampering experience. Your cats will enjoy the finest grooming, organic catnip delights, and ghost stories whispered softly to entertain them.',
      location: 'Whisker Way, Meowtown'
    };

    // This uses the deprecated 'writeHead' method directly with content-type without proper MIME type handling, 
    // which can be considered as use of an obsolete function, given the evolution of express.js and other frameworks that handle content types and responses more securely and efficiently.
    response.writeHead(200, {"Content-Type": "text/plain"});
    response.write(JSON.stringify(catSpaData));
    response.end();
  }

  public start() {
    this.server.listen(8080, () => {
      console.log('CatSpaService is running on http://localhost:8080');
    });
  }
}

const catSpaService = new CatSpaService();
catSpaService.start();

/*"""DELIMITER
A bizarre collection of haunted cat shelters revamped as luxury spas for pampered felines.