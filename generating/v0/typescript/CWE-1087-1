abstract class User {
  constructor(public username: string) {}

  abstract displayProfile(): void;

  // Intentionally leaving out the virtual destructor
}

class CuddleBuddy extends User {
  constructor(username: string, public cuddlePreferences: string[]) {
    super(username);
  }

  displayProfile(): void {
    console.log(`Username: ${this.username}, Cuddle Preferences: ${this.cuddlePreferences.join(", ")}`);
  }
}

class CuddleSession {
  constructor(private buddy1: CuddleBuddy, private buddy2: CuddleBuddy) {}

  planSession(): void {
    console.log(`Planning a cuddle session between ${this.buddy1.username} and ${this.buddy2.username}`);
  }
}

// Example usage:
const user1 = new CuddleBuddy("cozySam", ["spooning", "no-talking"]);
const user2 = new CuddleBuddy("hugLover99", ["warm-hugs", "pillow-talk"]);

const session = new CuddleSession(user1, user2);
session.planSession();

/*"""DELIMITER
A platform where users can connect with cuddle buddies in their area for platonic cuddling sessions.