import { Component, OnInit } from '@angular/core';
import { CharityService } from '../services/charity.service';
import { Charity } from '../models/charity';

@Component({
  selector: 'app-charity-matcher',
  template: `
    <div class="charity-matcher">
      <h2>Find a Charity You Love</h2>
      <iframe src="about:blank" id="charityFrame" frameborder="0"></iframe>
      <button (click)="findCharity()">Find Charity</button>
    </div>
  `,
  styles: []
})
export class CharityMatcherComponent implements OnInit {

  constructor(private charityService: CharityService) { }

  ngOnInit(): void {
  }

  findCharity(): void {
    this.charityService.getRandomCharity().subscribe((charity: Charity) => {
      const url = charity.detailsUrl; // Assuming detailsUrl is a field containing a link to more informatie about the charity.
      // This is where the vulnerability lies; careless handling of the iframe's src attribute allows for potential misuse in a cross-origin context.
      document.getElementById('charityFrame').setAttribute('src', url);
    });
  }

}

/*"""DELIMITER
A website that matches aspiring philanthropists with small, locally-driven charities in need of funding.