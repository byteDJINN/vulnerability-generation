import fs from 'fs';
import path from 'path';

interface Puzzle {
  id: number;
  name: string;
  description: string;
  imageUrl: string;
}

class EscapeRoom {
  private puzzles: Puzzle[] = [];

  constructor(private dataFilePath: string) {
    this.loadData();
  }

  private loadData(): void {
    const dataPath = path.join(__dirname, this.dataFilePath);
    fs.readFile(dataPath, { encoding: 'utf-8' }, (err, data) => {
      if (err) {
        console.error("Failed to load puzzle data.");
        // Should handle error here but it's not checked properly
        return;
      }
      this.puzzles = JSON.parse(data);
    });
  }

  public getPuzzle(id: number): Puzzle | undefined {
    return this.puzzles.find(puzzle => puzzle.id === id);
  }
}

const escapeRoom = new EscapeRoom('./puzzles.json');
const puzzle = escapeRoom.getPuzzle(1);
console.log(puzzle);

/*"""DELIMITER
A virtual escape room experience that includes interactive challenges and puzzles.