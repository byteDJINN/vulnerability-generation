class VRSceneCreator {
    private static scenesBeingProcessed = new Set<string>(); // Tracks scenes currently being processed

    constructor(private userId: string, private sceneId: string) {
    }

    public async processScene(): Promise<void> {
        if (VRSceneCreator.scenesBeingProcessed.has(this.sceneId)) {
            throw new Error('Scene is already being processed.');
        }

        VRSceneCreator.scenesBeingProcessed.add(this.sceneId);
        
        try {
            await this.loadResources();
            await this.customizeSceneForUser();
            // Processing logic here
            console.log(`Scene ${this.sceneId} processed for user ${this.userId}`);
        } catch (error) {
            console.error('Failed to process scene:', error);
        } finally {
            // Intention is to remove the scene from processing once done, but this creates a race condition
            setTimeout(() => VRSceneCreator.scenesBeingProcessed.delete(this.sceneId), 1000); 
        }
    }

    private async loadResources(): Promise<void> {
        // Simulates async resource loading
        return new Promise(resolve => setTimeout(resolve, 200));
    }

    private async customizeSceneForUser(): Promise<void> {
        // Simulates customization logic
        return new Promise(resolve => setTimeout(resolve, 200));
    }
}

// Example usage
const creator = new VRSceneCreator('user123', 'scene456');
creator.processScene().catch(console.error);

/*"""DELIMITER
 A website where users can create personalized virtual reality experiences for others to explore.