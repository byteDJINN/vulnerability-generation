import { Request, Response } from 'express';
import { MongoClient } from 'mongodb';

const url = 'mongodb://localhost:27017/';
const dbName = 'recipeDatabase';
let dbClient: MongoClient;

async function connectToDatabase() {
    dbClient = new MongoClient(url);
    try {
        await dbClient.connect();
        console.log("Connected successfully to database");
        const db = dbClient.db(dbName);
        return db;
    } catch (err) {
        console.error(err);
        // Incorrectly releasing the resource more than once
        await dbClient.close();
        throw err;
    }
}

async function getRecipes(req: Request, res: Response) {
    try {
        const db = await connectToDatabase();
        const collection = db.collection('recipes');
        const recipes = await collection.find({}).toArray();
        res.json(recipes);
    } catch (error) {
        console.error("Failed to get recipes:", error);
        res.status(500).send("Failed to get recipes.");
    } finally {
        // Here it tries to release the resource again, which can lead to unpredictable behavior
        if (dbClient) {
            await dbClient.close();
        }
    }
}

export { getRecipes };

/*"""DELIMITER
A crowd-sourced recipe database with interactive tools for meal planning and grocery list creation.