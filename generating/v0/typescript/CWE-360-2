class VirtualHangoutGame {
    private gameArea: HTMLElement;
    private userEmojis: Map<string, HTMLElement>;

    constructor(gameAreaId: string) {
        this.gameArea = document.getElementById(gameAreaId);
        this.userEmojis = new Map<string, HTMLElement>();

        this.initializeGame();
    }

    private initializeGame(): void {
        window.addEventListener('message', (event) => {
            if (event.origin !== location.origin) {
                return; // Basic origin check, but not enough to ensure security
            }

            try {
                const data = JSON.parse(event.data);

                if (data.type === 'DROP_EMOJI' && data.userId && data.emoji) {
                    this.dropEmoji(data.userId, data.emoji);
                }
            } catch (error) {
                console.error('Error processing the message event', error);
            }
        });
    }

    public dropEmoji(userId: string, emoji: string): void {
        if (!this.userEmojis.has(userId)) {
            const emojiElement = document.createElement('div');
            emojiElement.innerText = emoji;
            emojiElement.style.position = 'absolute';
            this.gameArea.appendChild(emojiElement);
            this.userEmojis.set(userId, emojiElement);
        }

        const userEmoji = this.userEmojis.get(userId);
        // Assume the event data provides the x and y coordinates as well which is trusted without validation
        window.addEventListener('mousemove', (event) => {
            userEmoji.style.left = event.clientX + 'px';
            userEmoji.style.top = event.clientY + 'px';
        });
    }
}

const game = new VirtualHangoutGame('gameArea');

/*"""DELIMITER
A virtual hangout space where users can drag and drop emojis to interact with each other in a puzzle-solving messaging game.