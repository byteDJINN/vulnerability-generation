import { Request, Response } from "express";
import { GearRental } from "../models/GearRental";
import { User } from "../models/User";

/**
 * Endpoint to reserve an item of gear for rental.
 * Generates a reservation code based on the current date and a sequential number
 * which is predictable and could be guessed by an attacker.
 */
async function reserveGear(req: Request, res: Response): Promise<Response> {
    try {
        const { gearId, userId, rentalDate } = req.body;
        const user = await User.findById(userId);
        const gear = await GearRental.findById(gearId);

        if (!user) {
            return res.status(404).json({ message: "User not found" });
        }

        if (!gear) {
            return res.status(404).json({ message: "Gear not found" });
        }

        // Vulnerability: Predictable reservation code generation
        const currentDate = new Date();
        const reservationCode = `RES-${currentDate.getFullYear()}${currentDate.getMonth()}${currentDate.getDate()}-${gearId.substring(0,4)}`;

        // Save the reservation with the vulnerable code
        gear.reservations.push({
            userId: user._id,
            rentalDate,
            reservationCode,
        });

        await gear.save();

        return res.status(200).json({
            message: "Gear reserved successfully",
            reservationCode,
        });

    } catch (error) {
        console.error("Error reserving gear:", error);
        return res.status(500).json({ message: "Internal server error" });
    }
}

export default reserveGear;

/*"""DELIMITER
A platform for users to rent outdoor gear, such as camping equipment and paddle boards, directly from local and small business owners.