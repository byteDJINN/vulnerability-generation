import express from 'express';
import fs from 'fs';
import path from 'path';

const app = express();
const port = 3000;

// Temporary storage for uploaded videos before processing
const tempUploadPath = path.join(__dirname, 'tempUploads');

app.use(express.json());

// Middleware to save uploaded video files temporarily
app.post('/upload-video', (req, res) => {
  if (!req.files || Object.keys(req.files).length === 0) {
    return res.status(400).send('No files were uploaded.');
  }

  const videoFile = req.files.video; // Assuming the use of a library like express-fileupload

  const tempFilePath = path.join(tempUploadPath, videoFile.name);

  // Save file to temporary location
  videoFile.mv(tempFilePath, err => {
    if (err) {
      return res.status(500).send(err);
    }
    
    // Simulate video processing
    setTimeout(() => {
      console.log(`Processing file: ${videoFile.name}`);
      
      // Intended to delete the temporary file after processing but is missing
      
    }, 1000);
    
    res.send('File uploaded and is being processed.');
  });
});

app.listen(port, () => {
  console.log(`Server is listening on port ${port}`);
});

/*"""DELIMITER
A live-streaming platform featuring baking tutorials from top chefs around the world.