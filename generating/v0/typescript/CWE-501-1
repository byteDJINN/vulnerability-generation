import express from 'express';
import bodyParser from 'body-parser';
import BookExchangeService from './services/BookExchangeService';

const app = express();
app.use(bodyParser.json());

interface BookExchangeRequest {
  userId: string;
  bookId: string;
  exchangeBookId: string;
}

app.post('/api/exchange', async (req, res) => {
  try {
    const { userId, bookId, exchangeBookId }: BookExchangeRequest = req.body;

    // Implicitly trust client-side input to identify user. 
    // This could lead to Trust Boundary Violation if not properly validated or sanitized.
    const response = await BookExchangeService.initiateBookExchange(userId, bookId, exchangeBookId);

    if (response.success) {
      res.status(200).json({ message: 'Exchange initiated successfully.', exchangeDetails: response.exchangeDetails });
    } else {
      res.status(400).json({ message: 'Failed to initiate exchange.' });
    }
  } catch (error) {
    res.status(500).json({ message: 'Internal server error.' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A platform for exchanging rare books with fellow enthusiasts worldwide.