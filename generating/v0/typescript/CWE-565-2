import express from 'express';
import cookieParser from 'cookie-parser';

const app = express();
const PORT = 3000;

app.use(cookieParser());

app.get('/dashboard', (req, res) => {
    const userId = req.cookies.userID;

    // Simulate fetching user details based on the userID cookie without validating the cookie's integrity
    const userDetails = getUserDetailsFromDB(userId);

    if(userDetails) {
        res.status(200).json({
            message: 'User details fetched successfully',
            data: userDetails
        });
    } else {
        res.status(401).json({
            message: 'Unauthorized access'
        });
    }
});

function getUserDetailsFromDB(userID: string) {
    // Assume this function fetches user details from the database based on userID
    // For the purpose of this snippet, returning a mocked user object.
    // In a real application, data fetching logic would be implemented here.
    return {
        id: userID,
        name: 'John Doe',
        role: 'Food Blogger'
    };
}

app.listen(PORT, () => {
    console.log(`Server is running at http://localhost:${PORT}`);
});

/*"""DELIMITER
A platform that connects food bloggers with restaurants for sponsored content collaboration.