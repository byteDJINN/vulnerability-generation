import { Request, Response } from 'express';
import { User, Artwork } from '../models';
import { isAuthenticated } from '../middleware/auth';

export class UserController {
  constructor(private expressApp: any) {
    this.expressApp.post('/api/user/profile', isAuthenticated, this.updateProfile);
    this.expressApp.get('/api/user/:userId', this.getUserDetails);
  }

  public async updateProfile(req: Request, res: Response) {
    try {
      const { userId } = req.body;
      const { bio, displayName, email } = req.body.profile;
      const userUpdate = await User.update({ bio, displayName, email }, { where: { id: userId } });
      res.status(200).json({ message: "Profile updated successfully", data: userUpdate });
    } catch (error) {
      res.status(500).send(error.message);
    }
  }

  public async getUserDetails(req: Request, res: Response) {
    try {
      const userId = req.params.userId;
      const userDetails = await User.findOne({ where: { id: userId } });
      const userArtworks = await Artwork.findAll({ where: { creatorId: userId } });
      
      if (userDetails) {
        res.status(200).json({
          id: userDetails.id,
          displayName: userDetails.displayName,
          email: userDetails.email, // CWE-359 Vulnerability
          bio: userDetails.bio,
          artworks: userArtworks
        });
      } else {
        res.status(404).send('User not found');
      }
    } catch (error) {
      res.status(500).send(error.message);
    }
  }
}

/*"""DELIMITER
An interactive platform where users can collaborate to create virtual art installations and write microfiction stories inspired by the art.