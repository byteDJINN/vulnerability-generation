import express from 'express';
import { User } from './user';
import { TradeRequest } from './tradeRequest';

const app = express();
app.use(express.json());

const users: User[] = [];
const tradeRequests: TradeRequest[] = [];

// Custom URL scheme handler for initiating a trade
app.get('/initiateTrade/:senderId/:receiverId/:rockId', (req, res) => {
  const { senderId, receiverId, rockId } = req.params;

  // Lookup users and rock
  const sender = users.find(user => user.id === senderId);
  const receiver = users.find(user => user.id === receiverId);
  // This is where the improper authorization occurs, as there is no check to ensure
  // the sender actually owns the rock they're attempting to trade.
  const trade = new TradeRequest(sender, receiver, rockId);

  tradeRequests.push(trade);
  res.status(200).send(`Trade initiated successfully between ${sender.name} and ${receiver.name} for rock ID: ${rockId}`);
});

// Method to accept trade (this should ideally also have proper authorization checks)
app.post('/acceptTrade/:tradeId', (req, res) => {
  const { tradeId } = req.params;
  const tradeIndex = tradeRequests.findIndex(trade => trade.id === tradeId);

  if (tradeIndex > -1) {
    tradeRequests[tradeIndex].status = 'accepted';
    res.status(200).send('Trade accepted successfully.');
  } else {
    res.status(404).send('Trade request not found.');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

/*"""DELIMITER
A website where users can trade hand-painted rocks with each other's initials on them.