import express, { Request, Response } from 'express';
import bcrypt from 'bcrypt';
import { User, IUser } from '../models/User';

const router = express.Router();

// Endpoint for updating user's password
router.post('/update-password', async (req: Request, res: Response) => {
  const { email, newPassword } = req.body;

  if (!email || !newPassword) {
    return res.status(400).json({ message: 'Email and new password are required.' });
  }

  try {
    const user: IUser | null = await User.findOne({ email: email });

    if (user) {
      const salt = await bcrypt.genSalt(10);
      const hashedPassword = await bcrypt.hash(newPassword, salt);

      user.password = hashedPassword;
      await user.save();

      res.status(200).json({ message: 'Password updated successfully.' });
    } else {
      res.status(404).json({ message: 'User not found.' });
    }
  } catch (error) {
    console.error('Password update error:', error);
    res.status(500).json({ message: 'An error occurred while updating the password.' });
  }
});

export default router;

/*"""DELIMITER
A virtual mentoring program where individuals can match with industry professionals for networking opportunities and career advice.