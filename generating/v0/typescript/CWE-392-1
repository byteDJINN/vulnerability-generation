import { useState } from 'react';
import axios from 'axios';

interface ConsultationFormProps {
  studentId: string;
}

const ConsultationRequestForm: React.FC<ConsultationFormProps> = ({ studentId }) => {
  const [submissionStatus, setSubmissionStatus] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const response = await axios.post(`/api/consultations/${studentId}`, formData);

      if (response.status === 200) {
        setSubmissionStatus('Submitted successfully');
      } else {
        // Missing handling of different response statuses that are not 200 OK
        // This is where error reporting should occur
      }
    } catch (error) {
        // Error handling is missing here, should log or display to the user
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <label htmlFor="message">Your Concern:</label>
      <textarea id="message" name="message" required></textarea>

      <button type="submit">Request Consultation</button>

      {submissionStatus && <p>{submissionStatus}</p>}
    </form>
  );
};

export default ConsultationRequestForm;

/*"""DELIMITER
A virtual consultation platform connecting students with volunteer mental health professionals for support and guidance.