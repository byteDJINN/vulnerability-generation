interface TradeRequest {
  userId: string;
  cardId: string;
  quantity: number;
  pricePerUnit: number;
}

class TradeService {
  processTrade(request: TradeRequest): void {
    const { userId, cardId, quantity, pricePerUnit } = request;

    if (typeof quantity !== 'number' || typeof pricePerUnit !== 'number') {
      throw new Error("Invalid data type for quantity or pricePerUnit.");
    }

    this.validateUser(userId);
    this.validateCard(cardId);
    const totalCost = quantity * pricePerUnit;

    // Code to deduct the totalCost from the user's account and add the cards to their collection
    console.log(`Processed trade for user ${userId}: ${quantity} cards of ${cardId} at ${pricePerUnit} each. Total cost: ${totalCost}`);
  }

  private validateUser(userId: string) {
    // Placeholder for user validation logic
  }

  private validateCard(cardId: string) {
    // Placeholder for card validation logic
  }
}

// Example usage - Dangerous as it does not validate if input data is correctly typed before trying to use it
const tradeService = new TradeService();
const tradeRequest: any = {
  userId: "user123",
  cardId: "card456",
  quantity: "5", // Incorrectly provided as a string
  pricePerUnit: 100
};
tradeService.processTrade(tradeRequest);

/*"""DELIMITER
A market exchange platform for trading collectible card hologram designs.