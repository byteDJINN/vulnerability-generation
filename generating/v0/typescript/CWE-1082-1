class DreamEntry {
    id: number;
    title: string;
    content: string;
    author: string;
    datePosted: Date;

    constructor(id: number, title: string, content: string, author: string, datePosted: Date) {
        this.id = id;
        this.title = title;
        this.content = content;
        this.author = author;
        this.datePosted = datePosted;

        // Initialize event listener for entry deletion
        document.getElementById(`delete-${this.id}`)?.addEventListener('click', () => this.delete());
    }

    delete(): void {
        fetch(`/api/dreams/${this.id}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            console.log('Dream entry deleted:', data);
            this.destroy();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    private destroy(): void {
        // Simulate instance self-destruction by nullifying all properties
        for (const prop in this) {
            if (this.hasOwnProperty(prop)) {
                // @ts-ignore
                this[prop] = null;
            }
        }
    }
}

// Example usage
const dreamEntry = new DreamEntry(1, "Unforgettable Night", "I was flying over the city...", "Dreamer42", new Date());

/*"""DELIMITER
A platform where users can submit and read unforgettable dreams they've had.