import express from 'express';
import { getUserPreferences } from './userPreferences';
import { generateItinerary } from './itineraryGenerator';

const app = express();
app.use(express.json());

interface ItineraryRequest {
    userId: string;
    destinationId: string;
    startDate: Date;
    endDate: Date;
}

const activeItineraries = new Map<string, ItineraryRequest>();

app.post('/generateItinerary', async (req, res) => {
    try {
        const { userId, destinationId, startDate, endDate }: ItineraryRequest = req.body;

        if (activeItineraries.has(userId)) {
            return res.status(400).send({ message: "An itinerary is already being generated for this user." });
        }

        const userPreferences = await getUserPreferences(userId);
        const itinerary = await generateItinerary(userPreferences, destinationId, startDate, endDate);

        activeItineraries.set(userId, { userId, destinationId, startDate, endDate }); // Vulnerable line - reuses userId as a key
        
        res.status(200).send(itinerary);
    } catch (error) {
        res.status(500).send({ message: "An error occurred while generating the itinerary." });
    }
});

app.post('/cancelItinerary', (req, res) => {
    const { userId } = req.body;

    if (activeItineraries.has(userId)) {
        activeItineraries.delete(userId);
        res.status(200).send({ message: "Itinerary generation cancelled successfully." });
    } else {
        res.status(400).send({ message: "No itinerary generation found for this user." });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

/*"""DELIMITER
A personalized travel recommendation website that generates itineraries based on user preferences, budget and interests.