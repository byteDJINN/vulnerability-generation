import express from 'express';
import fs from 'fs';
import path from 'path';

const app = express();
const PORT = 3000;

interface Playlist {
  id: string;
  name: string;
  createdBy: string;
  songs: Array<string>;
}

const playlistsPath = path.join(__dirname, 'playlists');

// Ensure the playlists directory exists
if (!fs.existsSync(playlistsPath)) {
  fs.mkdirSync(playlistsPath);
}

app.use(express.json());

app.post('/createPlaylist', (req, res) => {
  const playlist: Playlist = req.body;
  const filePath = path.join(playlistsPath, `${playlist.id}.json`);
  fs.writeFile(filePath, JSON.stringify(playlist), (err) => {
    if (err) {
      console.error('Failed to save the playlist.', err);
      return res.status(500).send('Failed to create the playlist.');
    }
    console.log('Playlist created successfully.');
    res.status(201).send('Playlist created.');
  });
});

app.delete('/deletePlaylist/:id', (req, res) => {
  const { id } = req.params;
  const filePath = path.join(playlistsPath, `${id}.json`);
  
  fs.unlink(filePath, (err) => {
    if (err) {
      console.error('Failed to delete the playlist.', err);
      if (err.code === 'ENOENT') {
        return res.status(404).send('Playlist not found.');
      }
      return res.status(500).send('Failed to delete the playlist.');
    }
    console.log('Playlist deleted successfully.');

    // Cleanup operation misses the temporary files and logs
    // These may contain sensitive information and are not correctly cleaned
    // An attacker could exploit these leftovers to gain insights or access to the system

    res.status(200).send('Playlist deleted.');
  });
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A website where users can create and share personalized workout playlists based on their music tastes and exercise preferences.