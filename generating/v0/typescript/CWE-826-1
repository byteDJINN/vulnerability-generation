import express from 'express';
import { MongoClient, Db } from 'mongodb';

class PuzzleController {
    private client: MongoClient;
    private db: Db;

    constructor() {
        this.client = new MongoClient('mongodb://localhost:27017');
        this.client.connect().then(() => {
            this.db = this.client.db('scavengerHunt');
        }).catch(err => console.error("Failed to connect to MongoDB", err));
    }

    public async createPuzzle(req: express.Request, res: express.Response): Promise<void> {
        const { title, description, answers } = req.body;
        try {
            const collection = this.db.collection('puzzles');
            const result = await collection.insertOne({ title, description, answers });
            res.status(201).json(result);
        } catch (err) {
            console.error("Error creating puzzle", err);
            res.status(500).json({ message: "Internal server error" });
        } finally {
            await this.client.close(); // This line introduces the vulnerability.
        }
    }

    // Other class methods...
}

const app = express();
const puzzleController = new PuzzleController();

app.use(express.json());

app.post('/api/puzzle', (req, res) => {
    puzzleController.createPuzzle(req, res);
});

const PORT = 3000;
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});

/*"""DELIMITER
A virtual scavenger hunt platform where users can create and solve puzzles to win prizes.