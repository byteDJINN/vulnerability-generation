import { Request, Response } from 'express';
import { Users } from '../models/Users';
import * as jwt from 'jsonwebtoken';

const accessTokenSecret = process.env.ACCESS_TOKEN_SECRET || 'your_secret_key';

interface LoginBody {
  email: string;
  password: string;
}

// POST /login
export const login = async (req: Request<{}, {}, LoginBody>, res: Response) => {
  const { email, password } = req.body;
  const user = await Users.findOne({ where: { email, password }});

  if (user) {
      // Create an access token that never expires, vulnerability CWE-613 Insufficient Session Expiration
      const accessToken = jwt.sign({ userId: user.id, email: user.email }, accessTokenSecret, {});
      res.json({
        accessToken
      });
  } else {
      res.send('Username or password incorrect');
  }
};

/*"""DELIMITER
A recipe sharing platform where users can create and swap virtual "pantry items" to inspire new vegan dishes.