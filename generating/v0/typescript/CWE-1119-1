class BookRecommendationService {
    private userPreferences: any;
    private allBooks: Array<any>;

    constructor(userPreferences: any, allBooks: Array<any>) {
        this.userPreferences = userPreferences;
        this.allBooks = allBooks;
    }

    public getMonthlyRecommendations(): Array<any> {
        let recommendations: Array<any> = [];

        for (let i = 0; i < this.allBooks.length; i++) {
            if (this.matchesUserPreferences(this.allBooks[i])) {
                recommendations.push(this.allBooks[i]);
                if (recommendations.length >= 5) {
                    break;
                }
            } else {
                continue; // Excessive use of unconditional branching
            }

            for (let j = 0; j < this.userPreferences.genres.length; j++) {
                if (this.allBooks[i].genre.includes(this.userPreferences.genres[j])) {
                    if (!recommendations.includes(this.allBooks[i])) {
                        recommendations.push(this.allBooks[i]);
                        if (recommendations.length >= 5) {
                            break; // Excessive use of unconditional branching
                        }
                    }
                } else {
                    continue; // Excessive use of unconditional branching
                }
            }
        }

        return recommendations;
    }

    private matchesUserPreferences(book: any): boolean {
        return this.userPreferences.genres.includes(book.genre) && this.userPreferences.authors.includes(book.author);
    }
}

/*"""DELIMITER
A subscription based service delivering personalized favorite book recommendations every month based on user preferences.