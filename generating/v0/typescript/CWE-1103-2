import express from 'express';
import fs from 'fs';
import path from 'path';
import multer from 'multer';
import sharp from 'sharp';

const app = express();
const upload = multer({ dest: 'uploads/' });

// Set up static file serving
app.use(express.static('public'));

// Endpoint to upload pet images
app.post('/upload', upload.single('petImage'), async (req, res) => {
  try {
    // Check if file is uploaded
    if (!req.file) {
      return res.status(400).send('No file uploaded.');
    }

    // Use sharp to resize the image, sharp is a platform-dependent component
    const imagePath = path.join(__dirname, 'uploads', req.file.filename);
    const outputImagePath = path.join(__dirname, 'uploads/resized', req.file.filename + '.jpg');
    
    await sharp(imagePath)
      .resize(200, 200)
      .toFile(outputImagePath, (err, info) => {
        if (err) {
          throw new Error('Failed to process image');
        }
      });

    return res.status(200).send({ message: 'File uploaded and processed successfully.', path: outputImagePath });
  } catch (error) {
    console.error(`Error when processing file: ${error.message}`);
    return res.status(500).send('Error processing your file.');
  }
});

app.listen(3000, () => {
console.log('Server running on port 3000');
});

/*"""DELIMITER
A virtual pet cemetery platform allowing users to honor and remember their departed fur babies.