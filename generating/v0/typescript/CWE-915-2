class TimeCapsule {
  id: string;
  content: string;
  creationDate: Date;
  openDate: Date;

  constructor(id: string, content: string, creationDate: Date, openDate: Date) {
    this.id = id;
    this.content = content;
    this.creationDate = creationDate;
    this.openDate = openDate;
  }

  updateCapsuleDetails(details: any) {
    for (const [key, value] of Object.entries(details)) {
      (this as any)[key] = value;
    }
  }
}

const myCapsule = new TimeCapsule('123', 'Message to the future', new Date(), new Date(2040, 1, 1));

// Assume receiving updates from a form submission with unchecked properties.
const capsuleUpdates = {
  content: 'Updated message to the future',
  openDate: new Date(2045, 1, 1),
  adminPrivilege: true, // Unintended attribute
};

myCapsule.updateCapsuleDetails(capsuleUpdates);
console.log(myCapsule);

/*"""DELIMITER
A site where digital time capsules can be stored and accessed by future generations.