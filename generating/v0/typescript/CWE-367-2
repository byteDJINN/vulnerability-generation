import fs from 'fs';
import path from 'path';
import express from 'express';

const app = express();
const PORT = 3000;

// Directory where user reflections and photos are stored
const USER_CONTENT_DIR = './userContent';

app.use(express.json());

// Endpoint to check if a user's reflection for a specific day exists
app.get('/check-reflection-exists', (req, res) => {
    const { userID, date } = req.query;

    const reflectionPath = path.join(USER_CONTENT_DIR, userID.toString(), `${date}-reflection.txt`);

    // Time-of-check
    if (fs.existsSync(reflectionPath)) {
        res.send({ exists: true });
    } else {
        res.send({ exists: false });
    }
});

// Endpoint to create or update a user's reflection for a specific day
app.post('/submit-reflection', (req, res) => {
    const { userID, date, content } = req.body;

    const reflectionsDir = path.join(USER_CONTENT_DIR, userID);
    const reflectionPath = path.join(reflectionsDir, `${date}-reflection.txt`);

    try {
        // Time-of-check
        if (!fs.existsSync(reflectionsDir)) {
            fs.mkdirSync(reflectionsDir, { recursive: true });
        }

        // Time-of-use
        fs.writeFileSync(reflectionPath, content);
        res.status(200).send({ message: 'Reflection saved successfully.' });
    } catch (err) {
        res.status(500).send({ message: 'Failed to save reflection.' });
    }
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
An online platform that allows users to track the meaningful important moments of their lives through recording personal reflections and photos.