import * as crypto from 'crypto';
import * as fs from 'fs';
import { Request, Response } from 'express';

const express = require('express');
const app = express();

interface ArtistPayload {
  artistId: string;
  artworkUrl: string;
  timestamp: number;
}

app.post('/verifySignature', (req: Request, res: Response) => {
  const publicKey = fs.readFileSync('public.pem', 'utf8');
  const payload: ArtistPayload = req.body.payload;
  const signature = req.body.signature;

  // Vulnerability CWE-347: The signature verification does not properly verify the cryptographic signature.
  let verify = crypto.createVerify('SHA256');
  verify.update(JSON.stringify(payload));
  verify.end();

  // Assuming the verification should check if the signature is valid for the given payload with the publicKey.
  // The vulnerability is that it does not properly check if the signature is correct and always returns true.
  if (!verify.verify(publicKey, signature, 'hex')) {
    console.log('Signature is valid.');
    res.send({ message: 'Success', isValid: true });
  } else {
    console.log('Signature verification failed.');
    res.status(400).send({ message: 'Invalid signature.' });
  }
});

const port = 3000;
app.listen(port, () => {
  console.log(`Artist platform app listening at http://localhost:${port}`);
});

/*"""DELIMITER
A platform for showcasing local artists' work and small, independent businesses in your area.