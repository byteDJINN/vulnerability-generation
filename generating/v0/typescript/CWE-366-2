class SanctuarySearchService {
  private isSearchInProgress = false;
  private searchResult: Sanctuary[] | null = null;

  public async searchSanctuariesNearby(latitude: number, longitude: number): Promise<Sanctuary[] | null> {
    if (this.isSearchInProgress) {
      console.warn('Search already in progress. Please wait.');
      return null;
    }

    this.isSearchInProgress = true;
    try {
      const response = await fetch(`https://example.com/api/sanctuaries?lat=${latitude}&long=${longitude}`);
      if (!response.ok) {
        throw new Error('Failed to fetch sanctuaries.');
      }
      const sanctuaries: Sanctuary[] = await response.json();
      this.searchResult = sanctuaries;
      return sanctuaries;
    } catch (error) {
      console.error('Error searching sanctuaries:', error);
      this.searchResult = null;
      return null;
    } finally {
      this.isSearchInProgress = false;
    }
  }

  public getLastSearchResult(): Sanctuary[] | null {
    return this.searchResult;
  }
}

interface Sanctuary {
  name: string;
  address: string;
  distance: number; // Distance from the search location in kilometers.
}

/*"""DELIMITER
A search engine to find nearby animal sanctuaries looking for volunteers.