class User {
    name: string;
    email: string;
    constructor(name: string, email: string) {
        this.name = name;
        this.email = email;
    }
    displayUserInfo() {
        console.log(`User: ${this.name}, Email: ${this.email}`);
    }
}

class Post {
    title: string;
    content: string;
    constructor(title: string, content: string) {
        this.title = title;
        this.content = content;
    }
    displayPost() {
        console.log(`Title: ${this.title}, Content: ${this.content}`);
    }
}

class Contributor extends User {
    posts: Post[];
    constructor(name: string, email: string) {
        super(name, email);
        this.posts = [];
    }
    addPost(post: Post) {
        this.posts.push(post);
    }
    displayContributions() {
        console.log(`Contributor: ${this.name} has posts:`);
        this.posts.forEach(post => post.displayPost());
    }
}

class Moderator extends User {
    moderatedSections: string[];
    constructor(name: string, email: string, sections: string[]) {
        super(name, email);
        this.moderatedSections = sections;
    }
    displayModerations() {
        console.log(`Moderator: ${this.name}, Moderates Sections: ${this.moderatedSections.join(", ")}`);
    }
}

// Multi-inheritance not natively supported in TypeScript, simulating via mixin
function applyBaseClasses(derivedCtor: any, baseCtors: any[]) {
    baseCtors.forEach(baseCtor => {
        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {
            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null));
        });
    });
}

class SuperUser {
    constructor() {}
}

applyBaseClasses(SuperUser, [Contributor, Moderator]);

let superUser = new SuperUser() as unknown as Contributor & Moderator;
superUser.name = "Jane Doe";
superUser.email = "jane@example.com";
superUser.addPost(new Post("Improving Daily Routines", "Here's a hack to start your day with a productive mindset."));
superUser.moderatedSections = ["Life Hacks", "Productivity"];
superUser.displayUserInfo();
superUser.displayContributions();
superUser.displayModerations();

/*"""DELIMITER
A community-driven platform for sharing personalized life hacks and unconventional advice for improving basic tasks and common situations.