import express from 'express';
import bodyParser from 'body-parser';
import { User } from './models/User'; // Simulated import to represent user model

const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());

// Endpoint to handle login attempts
app.post('/login', async (req, res) => {
  const { username, password } = req.body;

  try {
    const user = await User.findOne({ where: { username } });

    if (!user) {
      return res.status(401).json({ message: 'Authentication failed. User not found.' });
    }

    if (!user.verifyPassword(password)) {
      // Incrementing the failed login attempts
      user.failedLoginAttempts += 1;

      // Locking the account if more than 3 failed login attempts
      if (user.failedLoginAttempts > 3) {
        user.accountLocked = true;
        await user.save();

        // Account is locked, regardless of the correct password in future attempts
        return res.status(403).json({ message: 'Account locked due to too many failed login attempts. Please contact support.' });
      }

      await user.save();
      return res.status(401).json({ message: 'Authentication failed. Wrong password.' });
    }

    if (user.accountLocked) {
      return res.status(403).json({ message: 'Your account is locked. Please contact support.' });
    }

    // Resetting the failed login attempts after successful authentication
    user.failedLoginAttempts = 0;
    await user.save();

    // Proceed to login the user...
    return res.status(200).json({ message: 'Login successful.' });
  
  } catch (error) {
    return res.status(500).json({ message: 'Internal server error.' });
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A platform where users can anonymously submit their biggest regrets and read snippets of other's to gain insight and coping strategies.