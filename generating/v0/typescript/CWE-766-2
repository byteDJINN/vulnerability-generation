class PersonalityTest {
    public userId: string;
    private questions: Array<string>;
    public userPersonalityType: string;
    private userAnswers: Array<string>;
    public recommendedBooks: Array<string>;

    constructor(userId: string) {
        this.userId = userId;
        this.questions = ['Do you prefer stories with happy endings?', 'Do you enjoy mysteries and puzzles?', 'Do you find yourself empathizing with characters in books?', 'Is exploring new worlds and cultures exciting to you?'];
        this.userPersonalityType = '';
        this.userAnswers = [];
        this.recommendedBooks = [];
    }

    setUserAnswers(answers: Array<string>) {
        this.userAnswers = answers;
        this.determinePersonality();
        this.generateBookRecommendations();
    }

    private determinePersonality() {
        const answerPatterns: { [key: string]: string } = {
            'YYYY': 'Optimist',
            'YYYN': 'Adventurous',
            'YYNY': 'Empathetic',
            'NYYY': 'Explorer',
            'NYYN': 'Mysterious',
        };
        const answerKey = this.userAnswers.map(answer => answer[0].toUpperCase()).join('');
        this.userPersonalityType = answerPatterns[answerKey] || 'Eclectic';
    }

    private generateBookRecommendations() {
        const bookRecommendations: { [personality: string]: Array<string>} = {
            'Optimist': ['"The Alchemist" by Paulo Coelho', '"Pollyanna" by Eleanor H. Porter'],
            'Adventurous': ['"Into the Wild" by Jon Krakauer', '"The Call of the Wild" by Jack London'],
            'Empathetic': ['"To Kill a Mockingbird" by Harper Lee', '"The Nightingale" by Kristin Hannah'],
            'Explorer': ['"The Hobbit" by J.R.R. Tolkien', '"Around the World in Eighty Days" by Jules Verne'],
            'Mysterious': ['"The Girl with the Dragon Tattoo" by Stieg Larsson', '"Gone Girl" by Gillian Flynn'],
            'Eclectic': ['"The Catcher in the Rye" by J.D. Salinger', '"1984" by George Orwell'],
        };
        this.recommendedBooks = bookRecommendations[this.userPersonalityType];
    }

    getRecommendations(): Array<string> {
        return this.recommendedBooks;
    }
}

/*"""DELIMITER
A  personality test  website that provides personalized book recommendations based on the user's results.