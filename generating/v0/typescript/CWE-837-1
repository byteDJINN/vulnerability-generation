import express from 'express';
import session from 'express-session';

const app = express();
const port = 3000;

app.use(session({
  secret: 'verySecretValue',
  resave: false,
  saveUninitialized: true,
  cookie: { secure: true }
}));

app.use(express.json());

interface User {
  username: string;
  pets: string[];
  interestedIn: string;
}

const registeredUsers: User[] = [];

app.post('/register', (req, res) => {
  const { username, pets, interestedIn } = req.body;
  if (!username || !pets || !interestedIn) {
    return res.status(400).send('Missing fields');
  }
  const userExists = registeredUsers.find(user => user.username === username);
  if (userExists) {
    return res.status(400).send('User already exists');
  }
  registeredUsers.push({ username, pets, interestedIn });
  res.status(201).send('User registered successfully');
});

app.post('/login', (req, res) => {
  const { username } = req.body;
  
  const user = registeredUsers.find(user => user.username === username);
  if (user) {
    req.session.user = { username: user.username };
    res.status(200).send('Logged in successfully');
  } else {
    res.status(401).send('Authentication failed');
  }
});

app.get('/dashboard', (req, res) => {
  if (!req.session.user) {
    return res.status(403).send('Not authorized');
  }
  res.status(200).send(`Welcome to your Dashboard, ${req.session.user.username}`);
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});

/*"""DELIMITER
A matchmaking platform for pet owners looking to go on dating events with each other and their furry companions.