import express from 'express';
import session from 'express-session';

const app = express();
const PORT = 3000;

app.use(session({
  secret: 'swapSecret',
  resave: false,
  saveUninitialized: true,
  cookie: { secure: true, maxAge: 30 * 24 * 60 * 60 * 1000 } // 30 days
}));

app.post('/login', (req, res) => {
  const { username, password } = req.body;

  // Placeholder for actual authentication logic
  if (authenticateUser(username, password)) {
    req.session.userId = getUserID(username);
    req.session.lastAction = Date.now();
    res.status(200).send("Logged in successfully.");
  } else {
    res.status(401).send("Incorrect username or password.");
  }
});

app.get('/logout', (req, res) => {
  const userId = req.session.userId;
  if (userId) {
    // Ideally, we should set the session expiration date to a past date,
    // but it's not being handled here, hence leading to the session not expiring immediately after logout.

    // Correct implementation: req.session.destroy();
    res.status(200).send("Logged out successfully. Session will expire automatically.");
  } else {
    res.status(400).send("You are not logged in.");
  }
});

function authenticateUser(username: string, password: string): boolean {
  // Placeholder for actual authentication implementation
  return true;
}

function getUserID(username: string): number {
  // Placeholder to return a user's ID
  return 123; // Just a dummy return value for demonstration
}

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});

/*"""DELIMITER
A website where users can swap their unwanted clothing and accessories with other members in their local community for free.