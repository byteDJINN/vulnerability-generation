import * as crypto from 'crypto';

class UserAccount {
    private passwordHash: string;

    constructor(password: string) {
        // Incorrectly using a non-cryptographic hash function for password storage
        this.passwordHash = crypto.createHash('md5').update(password).digest('hex');
    }

    public checkPassword(password: string): boolean {
        return this.passwordHash === crypto.createHash('md5').update(password).digest('hex');
    }
}

class CookwareSwap {
    private users: Map<string, UserAccount>;

    constructor() {
        this.users = new Map<string, UserAccount>();
    }

    public createUser(username: string, password: string) {
        if (this.users.has(username)) {
            throw new Error('User already exists');
        }
        const newUser = new UserAccount(password);
        this.users.set(username, newUser);
    }

    public loginUser(username: string, password: string): boolean {
        const user = this.users.get(username);
        if (!user) {
            throw new Error('User does not exist');
        }
        return user.checkPassword(password);
    }

    // Additional methods for trading cookware and gadgets would go here
}

// Example usage:
const swapSite = new CookwareSwap();
swapSite.createUser('chefJohnDoe', 'superSecret123');
console.log(swapSite.loginUser('chefJohnDoe', 'superSecret123')); // Should log true if password is correct

/*"""DELIMITER
A swap website where users can trade in gently used cookware for new kitchen gadgets.