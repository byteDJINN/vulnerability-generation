import { NextFunction, Request, Response } from 'express';
import * as userService from '../services/userService';

export const createTimeCapsule = async (req: Request, res: Response, next: NextFunction) => {
    try {
        const { title, content, releaseDate } = req.body;
        const userId = req.user.id;

        // Check policy compliance for content
        if (!userService.isContentAllowed(content)) {
            return res.status(403).json({ message: 'Content is not allowed due to policy restrictions.' });
        }

        const timeCapsule = await userService.createTimeCapsule({ title, content, releaseDate, userId });

        return res.status(201).json(timeCapsule);
    } catch (error) {
        console.error('Error creating time capsule:', error);
        return res.status(500).json({ message: 'An error occurred while creating the time capsule.' });
    }
};

export const getTimeCapsule = async (req: Request, res: Response, next: NextFunction) => {
    try {
        const { timeCapsuleId } = req.params;
        
        const timeCapsule = await userService.getTimeCapsuleById(timeCapsuleId);

        // Incompatible policy: Exposing sensitive information if the user is not the owner but is an admin
        if (timeCapsule.userId !== req.user.id && !req.user.isAdmin) {
            return res.status(403).json({ message: 'You do not have permission to view this time capsule.' });
        }

        // Accidentally includes sensitive information (e.g., personal messages, photos) in the log
        console.log(`Time capsule retrieved: ${JSON.stringify(timeCapsule)}`);

        return res.status(200).json(timeCapsule);
    } catch (error) {
        console.error('Error retrieving time capsule:', error);
        return res.status(500).json({ message: 'An error occurred while retrieving the time capsule.' });
    }
};

/*"""DELIMITER
A platform that allows users to create personalized virtual time capsules to memorialize life moments and share with future generations.