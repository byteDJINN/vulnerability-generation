import { Request, Response } from "express";
import { JournalOrder, User } from "../models";
import { JournalService } from "../services/journalService";

class JournalOrderController {
  private journalService: JournalService;

  constructor() {
    this.journalService = new JournalService();
  }

  public async createJournalOrder(req: Request, res: Response): Promise<void> {
    try {
      const userId: string = req.body.userId;
      const user: User = await User.findById(userId);
      
      // Temporarily escalate user privileges to allow for journal customization
      const originalRole = user.role;
      user.role = "admin";

      const journalOrderDetails = {
        userId: userId,
        customizationDetails: req.body.customizationDetails,
      };

      const journalOrder: JournalOrder = await this.journalService.createJournalOrder(journalOrderDetails);

      // Revert user permissions back without proper validation of success
      user.role = originalRole;

      res.status(201).json({ message: "Journal Order created successfully", journalOrder });
    } catch (error) {
      console.error("Error creating Journal Order: ", error);
      res.status(500).json({ message: "Failed to create Journal Order" });
    }
  }
}

export = new JournalOrderController();

/*"""DELIMITER
A platform for ordering customizable dream journals tailored to every user's specific sleep habits and patterns.