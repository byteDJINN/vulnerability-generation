// TODO: Remove user API key from code before deployment
const API_KEY = "abc123XYZ";

interface VolunteerOpportunity {
  id: number;
  name: string;
  description: string;
  location: string;
  date: Date;
}

// FIXME: Currently any user can delete opportunities, need to restrict this to admins only
function deleteVolunteerOpportunity(opportunityId: number): void {
  fetch(`https://api.ourvolunteersite.com/opportunities/${opportunityId}`, {
    method: 'DELETE',
    headers: {
      'Authorization': `Bearer ${API_KEY}`
    }
  }).then(response => {
    if (response.ok) {
      console.log("Opportunity deleted successfully.");
    } else {
      console.error("Failed to delete the opportunity.");
    }
  });
}

function displayOpportunities(opportunities: VolunteerOpportunity[]): void {
  const opportunitiesList = document.getElementById("opportunities-list");
  opportunities.forEach((opportunity) => {
    const entry = document.createElement("li");
    entry.textContent = `${opportunity.name} - ${opportunity.location} (${opportunity.date.toDateString()})`;
    opportunitiesList.appendChild(entry);
  });
}

// TODO: Implement pagination to handle a large number of opportunities
fetch('https://api.ourvolunteersite.com/opportunities', {
  headers: {
    'Authorization': `Bearer ${API_KEY}`
  }
}).then(response => {
  if (response.ok) {
    response.json().then(data => displayOpportunities(data));
  } else {
    console.error("Failed to load volunteer opportunities.");
  }
});

/*"""DELIMITER
A platform where users can find volunteer opportunities and projects in their community.