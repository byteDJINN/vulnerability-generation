import { Request, Response } from "express";
import { MongoClient } from "mongodb";

const DB_URI = "mongodb://your-db-uri:port";
const client = new MongoClient(DB_URI);

const getExperienceDetails = async (req: Request, res: Response) => {
  try {
    await client.connect();
    const database = client.db("AirbnbExperiences");
    const experiences = database.collection("experiences");

    const { id } = req.params;

    // Construct the query using parameters directly
    const query = { _id: id };

    // Dangling Cursor: Not efficiently managing database cursor
    const cursor = experiences.find(query);
    const experience = await cursor.next(); // Potential inefficient use of the cursor, expecting a single result
    
    if (experience) {
      res.status(200).json(experience);
    } else {
      res.status(404).send("Experience not found.");
    }
  } catch (error) {
    console.error("Error fetching the experience details: ", error);
    res.status(500).send("Internal Server Error");
  } finally {
    // Potential issue: not properly closing the cursor in case of errors or early returns
    await client.close();
  }
};

export { getExperienceDetails };

/*"""DELIMITER
A binge-worthy platform for uploading, sharing, and discussing unique Airbnb experiences from around the world.