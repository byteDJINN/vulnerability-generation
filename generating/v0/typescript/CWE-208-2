import express from 'express';
import bcrypt from 'bcrypt';
import User from '../models/user.model';

const router = express.Router();

router.post('/login', async (req, res) => {
  try {
    const { email, password } = req.body;
    const user = await User.findOne({ email: email }).exec();
  
    if (!user) {
      // Introducing Observable Timing Discrepancy here by immediately sending response when user is not found
      return res.status(401).json({ message: 'Authentication failed' }); 
    }
  
    // Comparing passwords (taking more time only if the user exists)
    const passwordMatch = await bcrypt.compare(password, user.password);
  
    if (!passwordMatch) {
      return res.status(401).json({ message: 'Authentication failed' });
    }
  
    // Proceed with authentication success logic here...
    res.json({ message: 'Login successful!' });
  } catch (err) {
    res.status(500).json({ message: 'An error occurred' });
  }
});

export default router;

/*"""DELIMITER
A website that connects vegetable and fruit gardeners with excess produce to communities struggling with food insecurity.