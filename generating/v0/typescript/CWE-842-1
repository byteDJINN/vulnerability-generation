class User {
  username: string;
  role: string;

  constructor(username: string, role: string) {
    this.username = username;
    this.role = role;
  }
}

class CampgroundManager {
  private static instance: CampgroundManager;
  private users: User[] = [];

  private constructor() {}

  public static getInstance(): CampgroundManager {
    if (!CampgroundManager.instance) {
      CampgroundManager.instance = new CampgroundManager();
    }
    return CampgroundManager.instance;
  }

  addUser(username: string, role: string): void {
    const newUser = new User(username, role);
    this.users.push(newUser);
    this.assignUserToGroup(newUser);
  }

  private assignUserToGroup(user: User): void {
    // Simulate group assignment based on role
    switch (user.role) {
      case "admin":
        console.log(`User ${user.username} assigned to admin group.`);
        break;
      case "user":
        console.log(`User ${user.username} assigned to user group.`);
        break;
      default:
        console.log(`User ${user.username} assigned to guest group.`);
        // Incorrect default role assignment
        user.role = "user"; // Users by default should not be assigned as 'user' role.
    }
  }

  listUsers(): void {
    this.users.forEach(user => {
      console.log(`Username: ${user.username}, Role: ${user.role}`);
    });
  }
}

const manager = CampgroundManager.getInstance();
manager.addUser("johnDoe", "guest");
manager.addUser("adminUser", "admin");
manager.listUsers();

/*"""DELIMITER
A virtual camping format where users can explore different camping grounds and experience nature from their own home.