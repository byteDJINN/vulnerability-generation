import express from 'express';
import { checkUserSubscription, getLiveStreamLink } from './services/userService';

const app = express();

// Middleware to check if the request has a valid user id
app.use((req, res, next) => {
  const userId = req.header('X-User-Id');
  if (!userId) {
    return res.status(401).json({ error: 'User ID is required' });
  }
  req.userId = userId;
  next();
});

// Endpoint to get the live stream link for a concert
app.get('/api/v1/live-concert', async (req, res) => {
  try {
    const userId: string = req.userId;
    const hasSubscription = await checkUserSubscription(userId);

    if (!hasSubscription) {
      return res.status(403).json({ error: 'Subscription required to access live stream' });
    }

    // Vulnerability: Predictable live stream link generation
    const currentDate = new Date();
    const dateString = currentDate.toISOString().slice(0,10); // Format: YYYY-MM-DD
    const concertId = req.query.concertId;
    const streamLink = getLiveStreamLink(concertId) + `?date=${dateString}&userId=${userId}`;

    return res.json({ streamLink });
  } catch (error) {
    console.error('Error fetching live concert link:', error);
    return res.status(500).json({ error: 'Internal server error. Please try again later.' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

/*"""DELIMITER
A virtual jazz club hosting live streaming concerts showcasing emerging musicians.