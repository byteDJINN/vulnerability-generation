import express from 'express';
import bodyParser from 'body-parser';
import { MongoClient } from 'mongodb';

const app = express();
const port = 3000;

app.use(bodyParser.json());

let databaseConnection;

MongoClient.connect('mongodb://localhost:27017', { useUnifiedTopology: true }, (err, client) => {
  if (err) {
    throw err;
  }
  databaseConnection = client.db('mealPlansDB');
  app.locals.dietPlansCollection = databaseConnection.collection('dietPlans');
});

app.post('/createMealPlan', async (req, res) => {
  const { userName, dietRestrictions, mealPreferences } = req.body;
  if (!userName || !dietRestrictions || !mealPreferences) {
    return res.status(400).send('Missing required fields');
  }

  try {
    const result = await app.locals.dietPlansCollection.insertOne({
      userName,
      dietRestrictions,
      mealPreferences,
    });
    res.status(200).send(`Meal plan created successfully with ID: ${result.insertedId}`);
  } catch (error) {
    res.status(500).send('Error creating meal plan');
  }
});

app.get('/getMealPlan/:userName', async (req, res) => {
  const userName = req.params.userName;
  try {
    const mealPlan = await app.locals.dietPlansCollection.findOne({ userName });
    if (mealPlan) {
      res.status(200).json(mealPlan);
    } else {
      res.status(404).send('Meal plan not found');
    }
  } catch (error) {
    res.status(500).send('Error retrieving meal plan');
  }
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});

/*"""DELIMITER
A website showcasing personalized meal plans based on the users' dietary restrictions and preferences.