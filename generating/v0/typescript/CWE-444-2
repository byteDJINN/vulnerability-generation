import * as http from 'http';
import { ServerResponse, IncomingMessage } from 'http';

const server = http.createServer((req: IncomingMessage, res: ServerResponse) => {
  const { method, url } = req;

  res.setHeader('Content-Type', 'text/html');
  
  if (method === 'POST' && url === '/api/recommendation') {
    let body = '';
    req.on('data', chunk => {
      body += chunk.toString(); // Convert binary data to string
    });

    req.on('end', () => {
      // Process the graphic novel recommendation data
      // Assuming body is JSON with fields: title, author, and review
      const { title, author, review } = JSON.parse(body);

      // Vulnerability: Inconsistent handling of Content-Length and Transfer-Encoding headers can lead
      // to HTTP Request Smuggling if both are used ambiguously.
      res.writeHead(200, {'Content-Length': body.length, 'Transfer-Encoding': 'chunked'}); 
      res.end(`<html><body><h1>Thanks for recommending ${title} by ${author}</h1><p>${review}</p></body></html>`);
    });
  } else {
    res.writeHead(404);
    res.end('<html><body><h1>404 - Page Not Found</h1></body></html>');
  }
});

server.listen(8080, () => {
  console.log('Listening on port 8080...');
});

/*"""DELIMITER
A platform for sharing graphic novel recommendations and discussions with other fans.