import fs from 'fs';
import path from 'path';

class RecipeManager {
  tempFilePath: string;

  constructor() {
    // Initialization of the temporary file path with potentially insecure permissions
    this.tempFilePath = path.join('/tmp', 'recipe-upload.tmp');
  }

  saveRecipeTemporarily(recipeData: string): Promise<void> {
    return new Promise((resolve, reject) => {
      // Writing the recipe data to a temporary file with default permissions, which might not be secure
      fs.writeFile(this.tempFilePath, recipeData, (err) => {
        if (err) {
          reject(err);
        } else {
          console.log(`Recipe data saved temporarily at ${this.tempFilePath}`);
          resolve();
        }
      });
    });
  }

  cleanUpTempFile(): Promise<void> {
    return new Promise((resolve, reject) => {
      fs.unlink(this.tempFilePath, (err) => {
        if (err) {
          reject(err);
        } else {
          console.log(`Temporary file ${this.tempFilePath} removed.`);
          resolve();
        }
      });
    });
  }
}

export default RecipeManager;

/*"""DELIMITER
A website that connects hometown chefs with hosting anyone who want gourmet meal recipes.