interface PhotoSessionInfo {
    date: Date;
    location: string;
    photographer: string;
}

class Booking {
    sessionInfo: PhotoSessionInfo;

    constructor(sessionInfo: PhotoSessionInfo) {
        this.sessionInfo = sessionInfo;
    }

    confirmBooking() {
        console.log(`Booking confirmed for ${this.sessionInfo.date} at ${this.sessionInfo.location} with ${this.sessionInfo.photographer}.`);
    }
}

class Payment {
    amount: number;
    method: string;

    constructor(amount: number, method: string) {
        this.amount = amount;
        this.method = method;
    }

    processPayment() {
        console.log(`Processing ${this.amount} payment using ${this.method}.`);
    }
}

function handleBooking(input: any) {
    if (input instanceof Booking) {
        input.confirmBooking();
    } else if (input instanceof Payment) {
        input.processPayment();
    } else {
        console.error("Invalid input type.");
    }
}

// Example usage
const newSession = new Booking({date: new Date(), location: "Central Park", photographer: "John Doe"});
handleBooking(newSession); // Proper usage

const fakePayment = {amount: 100, method: "Credit Card"}; // Intentionally incorrect type
handleBooking(fakePayment); // Here occurs the Type Confusion vulnerability because 'fakePayment' is not a 'Payment' instance but is treated as one

/*"""DELIMITER
A website for dog owners to book professional photoshoots for their furry companions.