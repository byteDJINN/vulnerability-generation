import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable, Subject } from 'rxjs';

@Component({
  selector: 'app-phenomena-report',
  templateUrl: './phenomena-report.component.html',
  styleUrls: ['./phenomena-report.component.css']
})
export class PhenomenaReportComponent implements OnInit {
  reportSubmitted = new Subject<boolean>();

  constructor(private httpClient: HttpClient) {}

  ngOnInit(): void {}

  submitReport(reportData: {title: string, description: string, location: string}) {
    this.httpClient.post('/api/reports', reportData).subscribe(() => {
      this.reportSubmitted.next(true);
      window.location.href = '/reports';
    });

    // Race Condition Vulnerability - The redirection and fetching of reports
    // might occur before the report is fully saved due to the asynchronous nature of HTTP request.
    this.reportSubmitted.subscribe((submitted) => {
      if (submitted) {
        this.httpClient.get('/api/reports').subscribe(); // Fetching reports without ensuring the report is saved
      }
    });
  }
}

/*"""DELIMITER
A platform for reporting and cataloging bizarre, unexplained phenomena from around the world.