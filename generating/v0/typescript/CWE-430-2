import express from 'express';
import http from 'http';
import { Server } as 'socket.io';
import path from 'path';

const app = express();
const server = http.createServer(app);
const io = new Server(server);

app.use(express.static(path.join(__dirname, 'public')));

io.on('connection', (socket) => {
  console.log('A user connected to the tea party room');

  socket.on('joinRoom', ({ username, room }) => {
    socket.join(room);
    // Broadcast when a user connects
    socket.broadcast.to(room).emit('message', `${username} has joined the tea party`);

    socket.on('teaSelection', (msg) => {
      io.to(room).emit('message', `${username} shared a tea: ${msg}`);
    });

    // Runs when client disconnects
    socket.on('disconnect', () => {
      io.to(room).emit('message', `${username} has left the tea party`);
    });
  });
});

// Incorrectly using an HTTP get handler for image upload instead of the intended file upload handler
app.get('/uploadImage', (req, res) => {
  res.send('Please use POST to upload images');
});

server.listen(3000, () => {
  console.log('Tea party server listening on port 3000');
});

/*"""DELIMITER
A virtual tea party site where users can chat live via webcam while sharing their favorite teas with members from around the world.