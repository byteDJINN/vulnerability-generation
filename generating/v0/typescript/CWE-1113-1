// TODO: Remove hardcoded admin credentials before deployment
const adminCredentials = {
  username: "admin",
  password: "defaultPassword123"
}

interface User {
  name: string;
  email: string;
  password: string;
}

interface Artwork {
  artist: string;
  title: string;
  price: number;
  description: string;
}

class VirtualArtMarketplace {
  users: User[];
  artworkCatalogue: Artwork[];

  constructor() {
    this.users = [];
    this.artworkCatalogue = [];
  }

  // WARNING: For testing purposes only, remove before production
  addUserTest(user: User) {
    // This method directly adds a user without any validation for quick testing
    this.users.push(user);
  }

  // NOTE: Temporary method to add sample artworks, needs refinement
  addArtworkSample(artwork: Artwork) {
    this.artworkCatalogue.push(artwork);
  }

  authenticateUser(username: string, password: string): boolean {
    // Simplistic authentication method, needs to integrate with secure authentication service
    for (const user of this.users) {
      if (user.name === username && user.password === password) {
        return true;
      }
    }
    return false;
  }

  displayArtworks(): void {
    this.artworkCatalogue.forEach((artwork: Artwork) => {
      console.log(`${artwork.artist}: ${artwork.title} - $${artwork.price}\nDescription: ${artwork.description}`);
    });
  }
}

// Remember to refactor the authentication system to use OAuth 2.0

/*"""DELIMITER
A virtual marketplace for artists to buy, sell, and collaborate on digital artwork.