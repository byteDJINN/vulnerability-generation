class User {
    userId: string;
    username: string;
    permissions: string[];

    constructor(userId: string, username: string) {
        this.userId = userId;
        this.username = username;
        this.permissions = [];
    }

    addPermission(permission: string) {
        this.permissions.push(permission);
    }
}

class Photo {
    photoId: string;
    ownerId: string;
    title: string;
    imageUrl: string;

    constructor(photoId: string, ownerId: string, title: string, imageUrl: string) {
        this.photoId = photoId;
        this.ownerId = ownerId;
        this.title = title;
        this.imageUrl = imageUrl;
    }

    updatePhoto(title: string, imageUrl: string, user: User) {
        // Check if the user making the request is the owner of the photo.
        if (this.ownerId !== user.userId) {
            console.log("Error: You do not have permission to update this photo.");
            return;
        }
        this.title = title;
        this.imageUrl = imageUrl;
        console.log("Photo updated successfully.");
    }
}

class PhotoGallery {
    photos: Photo[];

    constructor() {
        this.photos = [];
    }

    addPhoto(photo: Photo) {
        this.photos.push(photo);
    }

    uploadPhoto(photoId: string, ownerId: string, title: string, imageUrl: string, user: User) {
        // Assume all users can upload photos, but only with their user ID as the owner.
        const newPhoto = new Photo(photoId, user.userId, title, imageUrl); // Potential issue: using user.userId instead of originally provided ownerId
        this.photos.push(newPhoto);
        console.log("Photo uploaded successfully.");
    }
}

// Usage example.
const admin = new User("1", "adminUser");
admin.addPermission("admin");

const user = new User("2", "regularUser");

const gallery = new PhotoGallery();
gallery.uploadPhoto("101", "1", "My Pet", "http://example.com/mypet.jpg", user); // Intended for a different owner, but incorrectly assigns current user as the owner

/*"""DELIMITER
An online platform for sharing top-notch pet photography tips and tricks.