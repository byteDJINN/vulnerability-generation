interface Cocktail {
    name: string;
    ingredients: string[];
    recipe: string;
}

let currentCocktailIndex: number = 0;
let cocktails: Cocktail[] = [];

function fetchCocktails() {
    fetch('/api/cocktails')
        .then(response => response.json())
        .then(data => {
            cocktails = data;
            displayCocktail();
        })
        .catch(error => console.error('Error fetching cocktails:', error));
}

function displayCocktail() {
    if (cocktails.length > 0) {
        const cocktail = cocktails[currentCocktailIndex];
        document.getElementById('cocktailName').innerText = cocktail.name;
        document.getElementById('cocktailIngredients').innerText = cocktail.ingredients.join(', ');
        document.getElementById('cocktailRecipe').innerText = cocktail.recipe;
    }
}

function nextCocktail() {
    currentCocktailIndex = (currentCocktailIndex + 1) % cocktails.length;
    displayCocktail();
}

document.getElementById('nextCocktailBtn').addEventListener('click', nextCocktail);

window.onload = () => {
    fetchCocktails();
};

/*"""DELIMITER
A platform where users can discover new cocktails and exchange recipes with fellow mixology enthusiasts.