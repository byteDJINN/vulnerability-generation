import { NextFunction, Request, Response } from 'express';

class StoryController {
  public async submitStory(req: Request, res: Response, next: NextFunction) {
    try {
      const { story } = req.body;
      let responseMessage = 'Story submitted successfully.';

      if (!story) {
        responseMessage = 'Please provide a story.';
        return res.status(400).json({ message: responseMessage });
      }

      // Here the variable is reused for a different purpose
      story = this.sanitizeStory(story);

      // Saving the story to the database (Simulated function)
      await this.saveStory(story);
      
      return res.status(200).json({ message: responseMessage });
    } catch (error) {
      console.error('Error submitting story: ', error);
      next(error);
    }
  }

  private sanitizeStory(story: string): string {
    // Basic sanitation to prevent XSS
    return story.replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }

  private async saveStory(story: string): Promise<void> {
    // Simulated database save function
    console.log('Story saved:', story);
    // Pretend there's a database saving logic here
  }
}

/*"""DELIMITER
An online platform where users can anonymously submit and read stories about unfortunate but comical incidents that have happened to them.