import express from 'express';
import fileUpload from 'express-fileupload';
import fs from 'fs';
import path from 'path';

const app = express();
const PORT = process.env.PORT || 5000;

app.use(fileUpload({
  createParentPath: true,
}));

// Middleware to serve static files
app.use(express.static('public'));

app.post('/upload', async (req, res) => {
  try {
    if (!req.files) {
      res.send({
        status: false,
        message: 'No file uploaded',
      });
    } else {
      let photo = req.files.photo;

      // Use the mv() method to place the file on the server
      const uploadPath = path.join(__dirname, 'uploads', photo.name);

      photo.mv(uploadPath, (err) => {
        if (err) {
          return res.status(500).send(err);
        }

        res.send({
          status: true,
          message: 'File is uploaded',
          data: {
            name: photo.name,
            mimetype: photo.mimetype,
            size: photo.size,
          },
        });
      });
    }
  } catch (err) {
    res.status(500).send(err);
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A virtual commune for photographers to share and collaboratively edit images.