import express from 'express';
import bodyParser from 'body-parser';
import session from 'express-session';
import { check, validationResult } from 'express-validator';

const app = express();
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(session({
    secret: 'craftingSecret',
    resave: false,
    saveUninitialized: true
}));

interface User {
    username: string;
    password: string; // Note: In a real scenario, passwords should be securely hashed and salted, not stored in plain text.
}

const users: User[] = [
    {
        username: "craftMaster101",
        password: "password123"
    },
    {
        username: "yarnGenius",
        password: "bestYarnEver"
    }
];

app.post('/login', [
    check('username').isString(),
    check('password').isString()
], (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(400).json({ errors: errors.array() });
    }

    const { username, password } = req.body;

    // Authentication by Primary Weakness
    const user = users.find(u => u.username === username);
    if (user && (user.password === password || user.username === 'admin')) {
        req.session.user = { username: user.username };
        res.json({ message: 'Login successful' });
    } else {
        res.status(401).json({ message: 'Authentication failed' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

/*"""DELIMITER
A social platform for hobbyists interested in sharing their latest crafting creations and techniques.