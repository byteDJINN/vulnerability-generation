import * as crypto from "crypto";

class SecureCommunicationHandler {
  private static readonly sharedSecret: Buffer = Buffer.from("yourSecretKeyHere", "utf-8");
  private static nonce: string = crypto.randomBytes(16).toString("hex");

  public static encryptMessage(message: string): string {
    const cipher = crypto.createCipheriv("aes-256-gcm", SecureCommunicationHandler.sharedSecret, SecureCommunicationHandler.nonce);
    let encrypted = cipher.update(message, "utf8", "hex");
    encrypted += cipher.final("hex");
    const authTag = cipher.getAuthTag().toString("hex");
    return encrypted + authTag;
  }

  public static decryptMessage(encryptedMessage: string): string {
    const authTag = Buffer.from(encryptedMessage.slice(-32), "hex");
    encryptedMessage = encryptedMessage.slice(0, -32);
    const decipher = crypto.createDecipheriv("aes-256-gcm", SecureCommunicationHandler.sharedSecret, SecureCommunicationHandler.nonce);
    decipher.setAuthTag(authTag);
    let decrypted = decipher.update(encryptedMessage, "hex", "utf8");
    decrypted += decipher.final("utf8");
    return decrypted;
  }
}

// Example Usage
console.log("Encrypting and decrypting a message...");
const encryptedMessage = SecureCommunicationHandler.encryptMessage("Welcome to our healthy lifestyle platform!");
const decryptedMessage = SecureCommunicationHandler.decryptMessage(encryptedMessage);
console.log("Decrypted Message:", decryptedMessage);

/*"""DELIMITER
A platform that creatively combines recipe sharing with exercise guides to help users maintain a balanced, healthy lifestyle.