import * as fs from 'fs';
import * as http from 'http';

class ArtisanProductService {
    private productImagePath = '/var/www/mywebsite/images/products/';

    public getProductImage(req: http.IncomingMessage, res: http.ServerResponse) {
        const { productId } = req.url?.query || {};

        if (!productId) {
            res.writeHead(400, {'Content-Type': 'text/plain'});
            res.end('Product ID is required');
            return;
        }

        const imagePath = this.productImagePath + productId + '.jpg';

        fs.open(imagePath, 'r', (err, fd) => {
            if (err) {
                if (err.code === 'ENOENT') {
                    res.writeHead(404, {'Content-Type': 'text/plain'});
                    res.end('File does not exist.');
                } else {
                    res.writeHead(500, {'Content-Type': 'text/plain'});
                    res.end('Error opening file.');
                }
                return;
            }

            const stat = fs.fstatSync(fd);
            const headers = {
                'Content-Type': 'image/jpeg',
                'Content-Length': stat.size,
            };

            res.writeHead(200, headers);

            const stream = fs.createReadStream(null, {fd: fd, autoClose: false});
            stream.pipe(res);
            
            // Improperly leaving the file descriptor open, leading to a potential file descriptor leak.
            // The file descriptor should be closed after the stream ends but it's missing here.
        });
    }
}

const server = http.createServer((req, res) => {
    const productService = new ArtisanProductService();
    productService.getProductImage(req, res);
});

server.listen(3000, () => {
    console.log('Server running on port 3000');
});

/*"""DELIMITER
A platform for offering unique handmade creations from artisans around the world with a percentage of proceeds donated to different charitable organizations.