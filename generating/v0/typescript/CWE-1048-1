import { useEffect, useState } from 'react';
import axios from 'axios';

interface StoryComponentProps {
  storyId: string;
  onNextStep: Function;
}

const StoryComponent: React.FC<StoryComponentProps> = ({ storyId, onNextStep }) => {
  const [storyData, setStoryData] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchStoryData = async () => {
      try {
        setIsLoading(true);
        const response = await axios.get(`/api/stories/${storyId}`);
        setStoryData(response.data);
        setIsLoading(false);
      } catch (error) {
        console.error('Failed to fetch story data', error);
      }
    };

    fetchStoryData();
  }, [storyId]);

  const handleChoiceSelect = (nextStepId: string) => {
    onNextStep(nextStepId);
  };

  if (isLoading) {
    return <p>Loading story...</p>;
  }

  return (
    <div>
      <h1>{storyData.title}</h1>
      <p>{storyData.content}</p>
      {storyData.choices.map(choice => (
        <button key={choice.id} onClick={() => handleChoiceSelect(choice.nextStep)}>
          {choice.text}
        </button>
      ))}
    </div>
  );
};

export default StoryComponent;

/*"""DELIMITER
An online platform where users can create and share their own interactive choose-your-own-adventure stories.