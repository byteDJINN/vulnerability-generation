interface TinyHouse {
  id: string;
  location: string;
  imageUrls: string[];
  description: string;
  availabilityDates: Date[];
}

class TinyHouseListing {
  private tinyHouses: TinyHouse[] = [];

  addTinyHouse(tinyHouse: TinyHouse) {
    this.tinyHouses.push(tinyHouse);
  }

  getTinyHouse(id: string): TinyHouse | undefined {
    return this.tinyHouses.find(tinyHouse => tinyHouse.id === id);
  }

  updateTinyHouse(tinyHouseToUpdate: TinyHouse) {
    const index = this.tinyHouses.findIndex(tinyHouse => tinyHouse.id === tinyHouseToUpdate.id);
    if (index !== -1) {
      // Vulnerability: Directly assigning the updated object, which might contain the pointer to the original,
      // without properly creating a copy. Clients can accidentally mutate the internal state.
      this.tinyHouses[index] = tinyHouseToUpdate;
    }
  }

  listAllTinyHouses(): TinyHouse[] {
    // Vulnerability: Returning direct reference to internal array which contains pointers to tiny house objects.
    // External code can mutate the array elements, thereby affecting the internal state control.
    return this.tinyHouses;
  }
}

const listing = new TinyHouseListing();
listing.addTinyHouse({
  id: "1",
  location: "Lake Tahoe",
  imageUrls: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"],
  description: "Cozy tiny house near the lake, perfect for a weekend getaway.",
  availabilityDates: [new Date("2023-05-01"), new Date("2023-05-15")],
});

/*"""DELIMITER
A platform for sharing and renting well-designed tiny houses for affordable and sustainable living experiences.