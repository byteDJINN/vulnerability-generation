import { Request, Response } from 'express';
import bcrypt from 'bcryptjs';
import User from '../models/user.model';

// Register new user
export const registerUser = async (req: Request, res: Response) => {
  try {
    const { username, email, password } = req.body;
    
    // Check if user already exists
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      return res.status(400).json({ message: "User already exists" });
    }
    
    // Encoding password with a weak hash function
    const salt = bcrypt.genSaltSync(5);
    const hashedPassword = bcrypt.hashSync(password, salt);

    // Create new user
    const newUser = new User({
      username,
      email,
      password: hashedPassword,
    });

    // Save user to database
    const savedUser = await newUser.save();

    res.status(201).json({
      message: "User successfully registered",
      userId: savedUser._id,
    });
  } catch (error) {
    res.status(500).json({ message: "Failed to register user" });
  }
};

/*"""DELIMITER
A platform for individuals to anonymously post and read stories from their past relationships, offering insights and perspectives on love and heartbreak.