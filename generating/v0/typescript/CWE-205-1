import express from 'express';
import bodyParser from 'body-parser';
import { getRecipes } from './recipeService';

const app = express();
app.use(bodyParser.json());

app.post('/generateRecipe', async (req, res) => {
    const { dietaryRestrictions, flavorPreferences } = req.body;
    try {
        const recipes = await getRecipes(dietaryRestrictions, flavorPreferences);
        if (recipes.length) {
            res.status(200).json({ success: true, recipes });
        } else {
            // Observable behavioral discrepancy here based on input conditions
            res.status(200).json({ success: false, message: "Sorry, we could not find any recipes matching your criteria." });
        }
    } catch (error) {
        // Different response behavior when encountering an error, creating an observable discrepancy
        console.error('Error generating recipe:', error);
        res.status(500).json({ success: false, message: "Internal server error. Please try again later." });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
a customizable adventure cookbook website that generates recipes based on the users' dietary restrictions and flavor preferences.