class VintageClothingStore {
    private inventory: Array<{ item: string; decade: string; quantity: number; price: number }> = [];

    constructor() {
        this.inventory.push({ item: "Flapper Dress", decade: "1920s", quantity: 10, price: 120 });
        this.inventory.push({ item: "Zoot Suit", decade: "1940s", quantity: 5, price: 180 });
        this.inventory.push({ item: "Poodle Skirt", decade: "1950s", quantity: 8, price: 90 });
        this.inventory.push({ item: "Bell-Bottom Jeans", decade: "1970s", quantity: 12, price: 95 });
    }

    public getInventory(): Array<{ item: string; decade: string; quantity: number; price: number }> {
        return this.inventory;
    }

    public addInventory(item: string, decade: string, quantity: number, price: number): void {
        this.inventory.push({ item, decade, quantity, price });
    }

    public updateInventory(externalUpdateFunction: (inventory: Array<{ item: string; decade: string; quantity: number; price: number }>) => void): void {
        externalUpdateFunction(this.inventory);
    }
}

const store = new VintageClothingStore();

// Untrusted third-party inventory management tool
function externalInventoryUpdater(inventory: Array<{ item: string; decade: string; quantity: number; price: number }>): void {
    // Suppose this function is meant to increment the quantity of each item by 1
    inventory.forEach(item => {
        item.quantity += 1; // This modifies the original store inventory due to direct object reference
    });
}

// The store attempts to update its inventory through an untrusted external function
store.updateInventory(externalInventoryUpdater);

console.log(store.getInventory());

/*"""DELIMITER
A virtual vintage clothing store that curates looks inspired by the fashion of different iconic decades.