import express from 'express';
import Experience from '../models/Experience';
import User from '../models/User';

const router = express.Router();

// Endpoint for a user to book an experience
router.post('/bookExperience', async (req, res) => {
  const { userId, experienceId } = req.body;

  try {
    const experience = await Experience.findById(experienceId);
    if (!experience) {
      return res.status(404).send('Experience not found');
    }

    if (experience.isBooked) {
      return res.status(400).send('Experience is already booked');
    }

    // Find the user and book the experience without verifying if the user making the request owns the userId
    const user = await User.findById(userId);
    
    experience.isBooked = true;
    experience.bookedBy = user._id;
    await experience.save();

    res.status(200).send('Experience booked successfully');
  } catch (error) {
    console.log(error);
    res.status(500).send('Server error');
  }
});

export default router;

/*"""DELIMITER
A platform that connects travelers with locals for authentic and unique vacation experiences.