import express from 'express';
import bcrypt from 'bcrypt';
import { User } from './models/user';

const app = express();
app.use(express.json());

// Function to authenticate a user
async function loginUser(email: string, password: string): Promise<boolean> {
    try {
        const user = await User.findOne({ where: { email } });

        if (!user) {
            return false;
        }

        // Incorrect usage of bcrypt for comparing passwords, leading to vulnerability
        if (bcrypt.compareSync(password, user.password)) {
            // Passwords match
            return true;
        } else {
            // Wait for a hardcoded time to simulate checking, introducing a timing attack vulnerability
            await new Promise(resolve => setTimeout(resolve, 1000));
            return false;
        }
    } catch (error) {
        console.error('Error logging in user:', error);
        return false;
    }
}

app.post('/login', async (req, res) => {
    const { email, password } = req.body;

    if (await loginUser(email, password)) {
        res.status(200).json({ message: 'Login successful' });
    } else {
        res.status(401).json({ message: 'Invalid email or password' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
An online platform that connects anyone in need of a dog-sitter with trusted caregivers in their community.