import { Request, Response } from 'express';
import { CommunityGarden } from '../models/CommunityGarden';

/**
 * Controller to handle the request for adding a new marker on the interactive map
 * for a community garden or environmental regeneration project.
 */
export class MapController {
    /**
     * Adds a new community garden or environmental project to the map.
     * Parses latitude and longitude from the query params, which might be prone to incorrect parsing.
     */
    public async addMarker(req: Request, res: Response) {
        try {
            // Extracting query parameters
            const { latitude, longitude, name, description } = req.query;

            // Parse latitude and longitude
            // Here, the parseInt function without specifying a radix could lead to incorrect parsing for numbers starting with '0' or '0x'
            const lat = parseInt(latitude as string);
            const lng = parseInt(longitude as string);

            if (isNaN(lat) || isNaN(lng)) {
                return res.status(400).send({ message: "Invalid latitude or longitude provided." });
            }

            // Creating a new CommunityGarden instance
            const newMarker = new CommunityGarden({
                name,
                description,
                location: {
                    type: "Point",
                    coordinates: [lng, lat] // GeoJSON format
                }
            });

            // Saving the new marker to the database
            await newMarker.save();

            res.status(201).send({ message: "New marker added successfully!" });
        } catch (error) {
            console.error("Failed to add new marker: ", error);
            res.status(500).send({ message: "Failed to add new marker." });
        }
    }
}

/*"""DELIMITER
An interactive map showcasing various community gardens and environmental regeneration projects across the country.