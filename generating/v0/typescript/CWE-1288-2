interface Booking {
    teamId: string;
    startTime: Date;
    endTime: Date;
    arenaId: string;
}

class BookingManager {
    private bookings: Booking[] = [];

    public addBooking(request: any): void {
        const booking: Booking = {
            teamId: request.body.teamId,
            startTime: new Date(request.body.startTime),
            endTime: new Date(request.body.endTime),
            arenaId: request.body.arenaId,
        };

        // Simulated checking for overlapping bookings, but without consistent input validation
        const isOverlapping = this.bookings.some(b => {
            return b.arenaId === booking.arenaId && (
                    (b.startTime <= booking.startTime && b.endTime >= booking.startTime) ||
                    (b.startTime <= booking.endTime && b.endTime >= booking.endTime)
                   );
        });

        if (!isOverlapping) {
            this.bookings.push(booking);
            console.log('Booking added:', booking);
        } else {
            console.error('Error: The requested booking time overlaps with an existing booking.');
        }
    }

    // Further methods to manage bookings would be implemented here
}

const bookingManager = new BookingManager();

// Example of an HTTP request body that would be received and processed
const request = {
    body: {
        teamId: 'team1234',
        startTime: '2023-08-05T09:00:00.000Z',
        endTime: '2023-08-05T11:00:00.000Z',
        arenaId: 'arena5678',
    }
};

bookingManager.addBooking(request);

/*"""DELIMITER
A platform where amateur roller derby teams can book practice space and compete against each other.