import express from 'express';
import { User, Hobby } from './models';
import bcrypt from 'bcrypt';

const app = express();
app.use(express.json());

app.post('/register', async (req, res) => {
    try {
        const { username, password, hobby } = req.body;
        const hashedPassword = await bcrypt.hash(password, 10);
        const newUser = new User({ username, password: hashedPassword });
        await newUser.save();
        
        const newHobby = new Hobby({ name: hobby, user: newUser._id });
        await newHobby.save();
        
        res.status(201).send('User registered successfully');
    } catch (error) {
        console.error('Registration error:', error);
        res.status(500).send('Error registering user');
    }
});

app.post('/login', async (req, res) => {
    try {
        const { username, password } = req.body;
        const user = await User.findOne({ username });

        if (!user) {
            setTimeout(() => { // Adding artificial delay
                res.status(401).send('Authentication failed');
            }, 2000);
        } else if (await bcrypt.compare(password, user.password)) {
            res.status(200).send('Authentication successful');
        } else {
            res.status(401).send('Authentication failed');
        }
    } catch (error) {
        console.error('Login error:', error);
        res.status(500).send('Error logging in');
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

/*"""DELIMITER
A site that matches generations by promoting hobbies or skills sharing workshops/co-eyeacja events__":
