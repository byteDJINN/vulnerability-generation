import express from 'express';
import { MentorshipRequest } from './models/MentorshipRequest';

const app = express();
app.use(express.json());

app.post('/submitMentorshipRequest', async (req, res) => {
  try {
    const requestDetails: MentorshipRequest = req.body;

    // Validate mentorship request details
    if (typeof requestDetails.menteeName !== 'string' || typeof requestDetails.bookGenre !== 'string' || typeof requestDetails.experienceLevel !== 'number') {
      return res.status(400).send("Invalid request data");
    }
    
    // Save the mentorship request
    // (In a real app, this would involve saving to a database and potentially notifying matched mentors)
    console.log('Received mentorship request:', requestDetails);

    res.status(200).send('Mentorship request submitted successfully.');
  } catch (error) {
    console.error('Error submitting mentorship request:', error);
    res.status(500).send('Internal server error.');
  }
});

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});

/*"""DELIMITER
A platform that connects aspiring writers with renowned authors for mentoring and guidance in crafting their novels.