class AffirmationExchange {
    private balanceMap: Map<string, number>;

    constructor() {
        this.balanceMap = new Map<string, number>();
    }

    getBalance(user: string): number {
        return this.balanceMap.get(user) || 0;
    }

    addAffirmation(user: string): void {
        let currentBalance = this.getBalance(user);
        this.balanceMap.set(user, currentBalance + 1);
    }

    tradeAffirmations(sender: string, receiver: string): void {
        if (this.getBalance(sender) > 0) {
            this.subtractAffirmation(sender);
            // A nested call that unintentionally enables reentrancy
            this.notifyTrade(sender, receiver); // Potentially malicious if overridden in a subclass or manipulated externally
            this.addAffirmation(receiver);
        }
    }

    protected subtractAffirmation(user: string): void {
        let currentBalance = this.getBalance(user);
        if (currentBalance > 0) {
            this.balanceMap.set(user, currentBalance - 1);
        }
    }

    // Placeholder for a notification function that could be manipulated to re-enter tradeAffirmations
    protected notifyTrade(sender: string, receiver: string): void {
        console.log(`${sender} traded an affirmation with ${receiver}.`);
        // In a more complex situation, this could trigger an event or callback leading to reentrancy.
    }
}

/*"""DELIMITER
A site where you can trade positive affirmations and words of encouragement with others.