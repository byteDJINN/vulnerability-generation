import express, { Request, Response } from 'express';
import { VolunteerOpportunityService } from '../services/VolunteerOpportunityService';

const router = express.Router();

/**
 * Route to handle fetching available volunteer opportunities.
 * The implementation assumes that any non-200 status code from VolunteerOpportunityService
 * means there are no opportunities available, which might not always be the case.
 */
router.get('/api/volunteer-opportunities', async (req: Request, res: Response) => {
    try {
        const opportunities = await VolunteerOpportunityService.getAvailableOpportunities();
        if (opportunities) {
            res.json(opportunities);
        } else {
            // Here lies the vulnerability - assuming any error or unexpected status code means no opportunities
            // This could obscure different types of errors or important status information.
            res.status(204).send('No available volunteer opportunities at the moment.');
        }
    } catch (error) {
        console.error('Error fetching volunteer opportunities:', error);
        res.status(500).send('Internal server error');
    }
});

export default router;

/*"""DELIMITER
A platform connecting professionals seeking volunteer opportunities with organizations in need of skilled assistance.