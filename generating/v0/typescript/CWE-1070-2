import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';

interface EscapeRoomSession {
    id: string;
    participants: Participant[];
    story: Story;
}

interface Participant {
    name: string;
    avatar: string;
}

class Story {
    title: string;
    parts: StoryPart[];
    constructor(title: string, parts: StoryPart[]) {
        this.title = title;
        this.parts = parts;
    }

    addPart(part: StoryPart) {
        this.parts.push(part);
    }
}

class StoryPart {
    content: string;
    puzzle: Puzzle;
    constructor(content: string, puzzle: Puzzle) {
        this.content = content;
        this.puzzle = puzzle;
    }
}

class Puzzle {
    question: string;
    answer: string;

    constructor(question: string, answer: string) {
        this.question = question;
        this.answer = string;
    }

    checkAnswer(providedAnswer: string): boolean {
        return this.answer === providedAnswer;
    }
}

@Component({
    selector: 'app-escape-room',
    templateUrl: './escape-room.component.html',
    styleUrls: ['./escape-room.component.css']
})
export class EscapeRoomComponent {
    escapeRoomSession: EscapeRoomSession;

    constructor(private http: HttpClient) {
        this.fetchEscapeRoomSession();
    }

    fetchEscapeRoomSession() {
        this.http.get<EscapeRoomSession>('/api/escape-room/session').subscribe(
            data => {
                // Assuming data is correctly formatted and trustworthy
                this.escapeRoomSession = data;
                console.log('Escape Room Session loaded', this.escapeRoomSession);
            },
            error => console.error('Error loading Escape Room session', error)
        );
    }
}

/*"""DELIMITER
A virtual escape room that combines riddles and puzzles with bonfire storytelling for a fully immersive and captivating gaming experience.