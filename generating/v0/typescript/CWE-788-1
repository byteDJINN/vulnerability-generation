class TreasureHunt {
    private clues: string[];
    private readonly bufferSize: number;

    constructor(clues: string[]) {
        this.clues = clues;
        // Initialize buffer size based on the number of clues, assuming each clue is small.
        this.bufferSize = clues.length + 1; // +1 for an extra operation space, potentially leading to the vulnerability
    }

    getNextClue(index: number): string | null {
        let buffer = new ArrayBuffer(this.bufferSize * Uint16Array.BYTES_PER_ELEMENT);
        let cluesBuffer = new Uint16Array(buffer);

        // Populate the buffer with clues' char codes
        for (let i = 0; i < this.clues.length; i++) {
            let codes = Array.from(this.clues[i]).map(letter => letter.charCodeAt(0));
            codes.forEach((code, codeIndex) => {
                // Potentially overflow the buffer if clues are longer than estimated
                cluesBuffer[i * this.bufferSize + codeIndex] = code;
            });
        }

        // Accessing the memory location after the end of the buffer, if the index is out of bounds
        let start = index * this.bufferSize;
        if (start >= cluesBuffer.length) {
            console.error("Index out of bounds, accessing memory location after end of buffer.");
            return null;
        }

        let clue = "";
        for (let i = start; i < start + this.bufferSize; i++) {
            if (cluesBuffer[i] !== 0) {
                clue += String.fromCharCode(cluesBuffer[i]);
            } else {
                break;
            }
        }

        return clue;
    }
}

// Example usage
const clues = ["Find the oldest tree in the park", "Count the steps of the lighthouse", "The last clue is hidden under the bench near the fountain"];
const treasureHunt = new TreasureHunt(clues);
console.log(treasureHunt.getNextClue(1)); // Expected normal behavior
console.log(treasureHunt.getNextClue(4)); // This could potentially access memory location after the buffer end due to incorrect bounds checking

/*"""DELIMITER
A part puzzle, part scavenger hunt website where users must solve brain-teasing riddles and search for clues in order to unlock hidden secrets and win prizes.