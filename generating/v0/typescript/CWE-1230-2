import express from 'express';
import { HotelDeal } from './models/HotelDeal';
import { connectToDb } from './db';

const app = express();
const port = 3000;

// Connect to the database
connectToDb();

app.use(express.json());

// Endpoint that allows users to retrieve the latest hotel deals
app.get('/api/deals', async (req, res) => {
    try {
        const deals = await HotelDeal.find().sort({ date: -1 }).exec();
        res.json(deals);
    } catch (error) {
        res.status(500).send('Error fetching hotel deals');
    }
});

// Endpoint to submit a haggle for a hotel room price
app.post('/api/haggle', async (req, res) => {
    const { userId, hotelId, offerPrice } = req.body;
    
    // Metadata about the user's negotiation attempt, including sensitive information
    const metadata = {
        timestamp: new Date(),
        ipAddress: req.ip,
        userEmail: req.body.userEmail, // Sensitive information
        userOffer: offerPrice,
    };
    
    try {
        // Pretend to send user's offer and metadata to the hotel for negotiation
        // In a real application, this might involve more complex business logic
        console.log('Sending offer to hotel:', { userId, hotelId, offerPrice, metadata });

        // This log is for debugging purposes but exposes sensitive information in metadata
        res.status(200).send('Your haggle offer has been submitted.');
    } catch (error) {
        res.status(500).send('Error submitting haggle offer');
    }
});

app.listen(port, () => {
    console.log(`Server running at http://localhost:${port}`);
});

/*"""DELIMITER
An online platform where users can immediately haggle for hotel room prices.