import express from "express";
import crypto from "crypto";

const app = express();
app.use(express.json());

// Simulate a simple database of users and their wardrobe items
let users = [
  {
    id: "1",
    username: "fashionFiesta",
    encryptedPassword: "b73697b7203c5dcd670ad421c5f866e4",
    wardrobe: [
      { item: "Vintage Denim Jeans", encrypted: true },
      { item: "Retro 80's Jacket", encrypted: true },
    ],
  },
];

// Endpoint to swap clothes between users
app.post("/swap-clothes", (req, res) => {
  const { senderId, receiverId, item } = req.body;

  const sender = users.find(user => user.id === senderId);
  const receiver = users.find(user => user.id === receiverId);

  if (!sender || !receiver) {
    return res.status(404).send("User not found");
  }

  const itemIndex = sender.wardrobe.findIndex(wardrobeItem =>
    // Assuming the encryption key is somehow implicitly trusted and available
    decryptItem(wardrobeItem.item) === item
  );

  if (itemIndex === -1) {
    return res.status(404).send("Item not found in sender's wardrobe");
  }

  // The item is removed from the sender's wardrobe and added to the receiver's wardrobe, without proper verification of its integrity
  const [removedItem] = sender.wardrobe.splice(itemIndex, 1);

  receiver.wardrobe.push({
    item: encryptItem(item), // Re-encrypting the item for the receiver's wardrobe
    encrypted: true,
  });

  res.send("Clothes swap successful.");
});

function encryptItem(item: string): string {
  // Simple encryption for demonstration (vulnerable to CWE-649)
  const cipher = crypto.createCipher('aes-192-cbc', 'a_secret_key');
  let encrypted = cipher.update(item, 'utf8', 'hex');
  encrypted += cipher.final('hex');
  return encrypted;
}

function decryptItem(encryptedItem: string): string {
  // Simple decryption for demonstration (vulnerable to CWE-649)
  const decipher = crypto.createDecipher('aes-192-cbc', 'a_secret_key');
  let decrypted = decipher.update(encryptedItem, 'hex', 'utf8');
  decrypted += decipher.final('utf8');
  return decrypted;
}

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

/*"""DELIMITER
A website where users can swap clothes with others to freshen up their wardrobe for free.