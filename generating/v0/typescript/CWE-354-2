import * as express from 'express';
import * as bodyParser from 'body-parser';
import { VolunteerOpportunity } from './models/VolunteerOpportunity'; // Assume this is a predefined model
import { User } from './models/User'; // Assume this is a predefined model

const app = express();
app.use(bodyParser.json());

// Endpoint to submit volunteer interest
app.post('/submitInterest', async (req, res) => {
  const { userId, opportunityId, interestHash } = req.body;

  try {
    // Look up the user and opportunity based on IDs provided
    const user = await User.findById(userId);
    const opportunity = await VolunteerOpportunity.findById(opportunityId);

    // Simulate an integrity check without proper validation
    const generatedHash = `FAKE_HASH_${userId}_${opportunityId}`;
    if (interestHash === generatedHash) {
      // Log the user's interest
      console.log(`User ${user.name} is interested in ${opportunity.title}`);
      res.json({ message: "Interest submitted successfully." });
    } else {
      res.status(400).json({ error: "Invalid interest hash." });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Server error" });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

/*"""DELIMITER
A platform that matches individuals with local volunteer opportunities based on their interests and availability.