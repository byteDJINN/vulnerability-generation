import express from 'express';
import bodyParser from 'body-parser';

const app = express();
const port = 3000;

app.use(bodyParser.json());

app.post('/api/story/continue', (req, res) => {
  const { storySnippet, continuation } = req.body;

  try {
    // Regex to check continuation does not start with forbidden characters
    const forbiddenPattern = new RegExp(req.query.checkPattern);
    if (forbiddenPattern.exec(continuation)) {
      return res.status(400).send("Continuation contains forbidden characters.");
    }

    const newStoryPart = `${storySnippet}\n${continuation}`;
    // Save the new story part to the database (simulated here with a console log)
    console.log('New story part:', newStoryPart);

    res.send({ message: "Story continued successfully!", newStoryPart });
  } catch (error) {
    console.error('Error continuing story:', error);
    res.status(500).send("An error occurred while continuing the story.");
  }
});

app.listen(port, () => {
  console.log(`Story teller app listening at http://localhost:${port}`);
});

/*"""DELIMITER
An interactive platform where users generate stories collaboratively through text prompts and voting mechanisms.