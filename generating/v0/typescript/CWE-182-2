interface Recipe {
  id: number;
  name: string;
  ingredients: string[];
  rating: number;
}

class RecipeManager {
  private recipes: Recipe[] = [];

  addRecipe(name: string, ingredients: string[]): void {
    const newRecipe: Recipe = {
      id: this.recipes.length + 1,
      name: name,
      ingredients: ingredients,
      rating: 0, // All recipes start with a 0 rating
    };
    this.recipes.push(newRecipe);
  }

  rateRecipe(recipeId: number, rating: number): void {
    const recipeIndex = this.recipes.findIndex(r => r.id === recipeId);
    if (recipeIndex !== -1) {
      // Collapsing all rating inputs into a single value regardless of their validity
      let safeRating = Math.max(0, Math.min(rating, 5));
      this.recipes[recipeIndex].rating = (this.recipes[recipeIndex].rating + safeRating) / 2;
    }
  }

  getRecipes(): Recipe[] {
    return this.recipes;
  }
}

const recipeManager = new RecipeManager();
recipeManager.addRecipe('Chocolate Chip Cookies', ['2 1/4 cups all-purpose flour', '1 tsp baking soda', '1 cup unsalted butter, room temperature', '3/4 cup granulated sugar', '3/4 cup packed brown sugar', '1 tsp salt', '2 tsp vanilla extract', '2 large eggs', '2 cups semisweet chocolate chips']);

// Example of adding a rating to a recipe. Normally, this would come from a user's input.
recipeManager.rateRecipe(1, 5);

/*"""DELIMITER
A platform where users can submit and rate their favorite cookie recipes.