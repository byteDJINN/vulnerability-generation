import express from 'express';
import bodyParser from 'body-parser';
import { checkUserPermission } from './auth';

const app = express();
app.use(bodyParser.json());

app.post('/api/recipes', (req, res) => {
  const user = req.body.user;
  // Check user permission before parsing and validating the recipe input
  if (!checkUserPermission(user)) {
    return res.status(403).json({ message: 'User does not have permission to add recipes.' });
  }

  const { title, ingredients, method } = req.body;

  // Simple validation
  if (!title || !ingredients || !method) {
    return res.status(400).json({ message: 'Missing fields in recipe submission.' });
  }

  // Assuming a function to add the recipe to a database is available
  addRecipe({ title, ingredients, method, user })
    .then(() => {
      res.status(201).json({ message: 'Recipe added successfully.' });
    })
    .catch((error) => {
      console.log(error);
      res.status(500).json({ message: 'An error occurred while adding the recipe.' });
    });
});

app.listen(3000, () => {
  console.log('Server running on port 3000');
});

/*"""DELIMITER
A platform for creatively showcasing unusual food combinations with user-submitted recipes and reviews.