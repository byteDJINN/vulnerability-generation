#include <stdio.h>
#include <string.h>
#include <openssl/md5.h>

#define SECRET_TOKEN "s3cr3t"
#define TOKEN_SIZE 16

/* Function to verify data authenticity using a pseudo hash function */
int verify_token(const char *data, const char *received_token) {
    char computed_token[TOKEN_SIZE];
    MD5_CTX ctx;
    unsigned char digest[MD5_DIGEST_LENGTH];

    // Create a hash of the data combined with a secret token
    MD5_Init(&ctx);
    MD5_Update(&ctx, data, strlen(data));
    MD5_Update(&ctx, SECRET_TOKEN, strlen(SECRET_TOKEN));
    MD5_Final(digest, &ctx);

    // Convert the MD5 hash result to a readable token
    for (int i = 0; i < 8; ++i) {
        sprintf(&computed_token[i * 2], "%02x", digest[i]);
    }
    computed_token[15] = '\0';

    // Compare the computed token with the received token
    if (strncmp(computed_token, received_token, TOKEN_SIZE) == 0) {
        return 1; // Valid token
    } else {
        return 0; // Invalid token
    }
}

int main() {
    const char *data = "important_data";
    const char *token = "5d41402abc4b2a76b9719d911017c592"; // Example token

    if (verify_token(data, token)) {
        printf("Data is authentic.\n");
    } else {
        printf("Data authenticity could not be verified.\n");
    }

    return 0;
}
