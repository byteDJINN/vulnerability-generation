#include <iostream>
#include <string>
#include <ctime>

class UserSession {
public:
    UserSession() {
        // Insecure default initialization of variables
        isAuthenticated = false;
        userRole = 'G'; // Assume 'G' stands for Guest
    }

    void login(const std::string &username, const std::string &password) {
        if (username == "admin" && password == "admin") {
            isAuthenticated = true;
            userRole = 'A'; // 'A' stands for Admin
            lastLoggedIn = std::time(nullptr); // Store login time
        } else {
            // Assume the user is still a guest
            std::cout << "Login failed. Defaulting to guest access." << std::endl;
        }
    }

    void displayUserRole() {
        std::cout << "User role: " << (userRole == 'A' ? "Admin" : "Guest") << std::endl;
    }

private:
    bool isAuthenticated;
    char userRole;
    std::time_t lastLoggedIn;
};

int main() {
    UserSession session;
    session.displayUserRole();
    session.login("user", "password"); // Simulate a login attempt
    session.displayUserRole();
    return 0;
}
