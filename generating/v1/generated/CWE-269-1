#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <pwd.h>
#include <sys/types.h>

void readFileAsRoot(const char *filePath) {
    FILE *file;

    // Drop privileges temporarily to the "nobody" user
    struct passwd *pw = getpwnam("nobody");
    if (pw == NULL) {
        perror("Failed to get nobody user information");
        exit(EXIT_FAILURE);
    }

    if (seteuid(pw->pw_uid) != 0) {
        perror("Failed to drop privileges to nobody");
        exit(EXIT_FAILURE);
    }

    file = fopen(filePath, "r");
    if (file == NULL) {
        perror("Failed to open file");
        // Restore root privileges before exiting
        if (seteuid(0) != 0) {
            perror("Failed to restore root privileges");
        }
        exit(EXIT_FAILURE);
    }

    // Read file content
    char buffer[256];
    while (fgets(buffer, sizeof(buffer), file) != NULL) {
        printf("%s", buffer);
    }

    fclose(file);

    // Restore root privileges
    if (seteuid(0) != 0) {
        perror("Failed to restore root privileges");
        exit(EXIT_FAILURE);
    }
}

int main() {
    const char *filePath = "/path/to/protected_file.txt";
    readFileAsRoot(filePath);
    return 0;
}
