from openai import OpenAI
import os
import re

from utils import chat

class Generator421:
    def __init__(self, apiKey, directory="421"):
        self.client = OpenAI(api_key=apiKey)
        self.directory = directory
        self.totalCost = 0

    def generateCodeSnippet(self, vulnerabilityName, vulnerabilityDesc):
        prompt = f"""
            Come up with a unique idea for a system designed in C and an example of a code function that would be part of that system.
            Respond with a short explanation but do not include any code. 
        """
        #print(prompt)
        response, totalCost = chat(self.client, prompt, temperature=1.2)
        self.totalCost += totalCost

        prompt = f"""
            Write a C code function that implements some part of this idea: {response} 
            Assume that the function is part of a larger program. Use functions that are not defined in the snippet.
            Add appropriate comments to make the code appear more realistic. 
            Respond with a 40 line code block containing only the function enclosed in triple backticks.
        """
        #print(prompt)
        response, totalCost = chat(self.client, prompt)
        self.totalCost += totalCost

        codeSnippet = re.search(r"```.*?\n(.*?)```", response, re.DOTALL)
        if codeSnippet is None:
            print("error32")
            return
        codeSnippet = codeSnippet.group(1)

        system = """
            You are a cybersecurity lecturer at a university, you are writing questions for the final exam.
            When you write questions, do not include hints or comments that would give away the answer.

            Your responses should follow the template:
            =====
            What is the vulnerability in the following code?
            <ANSWER and EXPLANATION>
            
            ```
            <CODE FUNCTION>
            ```
            =====
        """
        prompt = f"""
            Use the C code below and this vulnerability: {vulnerabilityName} {vulnerabilityDesc}.
            Respond with a 40 line code block containing only the function enclosed in triple backticks.
            {response}
        """
        #print(prompt)
        response, cost = chat(self.client, prompt, system=system)
        self.totalCost += cost

        codeSnippet = re.search(r"```.*?\n(.*?)```", response, re.DOTALL)
        if codeSnippet is None:
            print("error48")
            return
        codeSnippet = codeSnippet.group(1)

        _directory = f"{self.directory}"
        os.makedirs(_directory, exist_ok=True)
        # if file already exists, increment name
        i = 1
        while os.path.exists(f"{_directory}/{vulnerabilityName}-{i}.c"):
            i += 1
        with open(f"{_directory}/{vulnerabilityName}-{i}.c", "w") as file:
            file.write(codeSnippet)
    