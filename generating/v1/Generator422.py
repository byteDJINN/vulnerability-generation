from openai import OpenAI
import os
import re
import json

from utils import chat

class Generator422:
    def __init__(self, apiKey, directory="422"):
        self.client = OpenAI(api_key=apiKey)
        self.directory = directory
        self.totalCost = 0

    def _removeComments(self, code):
        code = re.sub(r"/\*.*?\*/", "", code, flags=re.DOTALL)
        code = re.sub(r"//.*?$", "", code, flags=re.MULTILINE)
        code = re.sub(r'\s+$', '', code, flags=re.MULTILINE)
        return code

    def _part1(self, vulnerabilityName, vulnerabilityDesc, code):
        system = """
            You are a cybersecurity lecturer at a university, you are writing questions for the final exam.
    
            Your responses should follow the template:
            === PART 1 ===
            <Explanation of specifically what could be changed to introduce the vulnerability>
            === PART 2 ===
            ```
            <The new full code function with comments showing where the vulnerability was added>
            ```

        """
        prompt = f"""
            Below is a safe C code function, change it to introduce this vulnerability: {vulnerabilityName} {vulnerabilityDesc}.
            Your response should make the provided secure code unsafe by modifying the provided code. 

            {code}
        """
        response, cost = chat(self.client, prompt, system=system)
        #print(response)
        self.totalCost += cost
        # remove comments
        response = self._removeComments(response)
        return response, system, prompt

    def generateCodeSnippet(self, vulnerabilityName, vulnerabilityDesc, code):
        retries = 0
        codeSnippet = None
        system = ""
        prompt = ""
        while retries < 3:
            response, system, prompt = self._part1(vulnerabilityName, vulnerabilityDesc, code)
            codeSnippet = re.search(r"=== PART 1 ===.*?=== PART 2 ===.*?```.*?\n(.*?)```", response, re.DOTALL)
            if codeSnippet is None:
                print("error34")
                print(response)
                retries += 1
                continue
            codeSnippet = codeSnippet.group(1)
            if len(codeSnippet) < 0.5*len(code):
                print("error49")
                print(response)
                retries += 1
                continue
            if re.sub(r'[^a-zA-Z]', '', self._removeComments(code)) == re.sub(r'[^a-zA-Z]', '', self._removeComments(codeSnippet)):
                print("error53")
                retries += 1
                continue
            break
        if retries == 3:
            print("FAILED")
            return

        output = {
            "cwe": vulnerabilityName,
            "prompt": {
                "system": system,
                "user": prompt
            },
            "response": response,
            "code": codeSnippet
        }

        _directory = f"{self.directory}"
        os.makedirs(_directory, exist_ok=True)
        # if file already exists, increment name
        i = 1
        while os.path.exists(f"{_directory}/{vulnerabilityName}-{i}.json"):
            i += 1
        with open(f"{_directory}/{vulnerabilityName}-{i}.json", "w") as file:
            file.write(json.dumps(output, indent=4))
    