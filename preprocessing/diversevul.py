import json
import requests
import os
import time
from dotenv import load_dotenv
from datetime import datetime
from collections import defaultdict

load_dotenv()

GH_TOKEN = os.getenv("GH_TOKEN")  # GitHub API token

# GitHub API endpoint for searching commits
headers = {
    "Accept": "application/vnd.github+json",
    "Authorization": f"Bearer {GH_TOKEN}",
    "X-GitHub-Api-Version": "2022-11-28"
}

seen = set()
c = 0
output = {}

data = []
with open("../input/diversevul.json", "r") as f:
    for fline in f:
        data.append(json.loads(fline))
tries = defaultdict(int)
while c < len(data):
    line = data[c]
    try:
        if line['commit_id'] in seen:
            c += 1
            continue
        
        url = f"https://api.github.com/search/commits?per_page=1&q=hash:{line['commit_id']}"
        response = requests.get(url, headers=headers).json()
        repo = response['items'][0]['repository']['full_name']
        parentHash = response['items'][0]['parents'][0]['sha']
        url = f"https://api.github.com/repos/{repo}/commits/{line['commit_id']}"
        response = requests.get(url, headers=headers).json()
        rawURLs = [x['raw_url'] for x in response['files']]
        rawURLs = [x.replace(line['commit_id'], parentHash) for x in rawURLs]
        output[line['commit_id']] = rawURLs

        seen.add(line['commit_id'])
        c += 1
        time.sleep(2)

        # print progress percentage
        if c % 10 == 0:
            prog = (c / len(data)) * 100
            print(f"{prog:.2f}%", end="\r")

    except Exception as e:
        print(f"{datetime.now()}: An error occurred. Retrying in 30 seconds...")
        print(e)
        print(line['commit_id'])
        tries[line['commit_id']] += 1
        if tries[line['commit_id']] > 3:
            print("FORCE SKIPPING", line['commit_id'])
            print()
            c += 1
        elif tries[line['commit_id']] > 2:
            print(f"Failed to get {line['commit_id']}")
        else:
            c -= 1
            time.sleep(30)

with open("f_diversevul_context.json", "w") as f:
    json.dump(output, f)
