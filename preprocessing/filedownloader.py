import json
import os
import requests

# import diversevul_context.json
def parse_diversevul_context(filename):
    data = {}
    with open(filename, "r") as f:
        current_lines = []
        current_key = None
        for line in f:
            line = line.strip()
            current_lines.append(line)

            if line.endswith("}"):
                # Check if the accumulated lines form a complete JSON object
                current_obj_str = "\n".join(current_lines)
                try:
                    obj = json.loads(current_obj_str)
                    current_key = list(obj.keys())[0]
                    data[current_key] = obj[current_key]
                except json.JSONDecodeError:
                    # If not a valid JSON object, continue accumulating lines
                    pass
                finally:
                    current_lines = []  # Reset for the next objects
    return data

data = parse_diversevul_context("diversevul_context.json")

os.makedirs("output", exist_ok=True)  # Create output directory

for commit_id, file_urls in data.items():
    if len(file_urls) == 1:
        file_url = file_urls[0]
        # check if already exists
        if os.path.exists(os.path.join("output", f"{commit_id}")):
            print(f"File already exists: {commit_id}")
            continue
        try:
            response = requests.get(file_url)
            response.raise_for_status()  # Raise an error if download fails

            filename = file_url.split("/")[-1]  # Get filename from URL
            output_path = os.path.join("output", f"{commit_id}")
            with open(output_path, "wb") as f:
                f.write(response.content)
            print(f"Downloaded and saved: {output_path}")
        except requests.exceptions.RequestException as e:
            print(f"Error downloading {file_url}: {e}")



