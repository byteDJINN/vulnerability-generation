import random
import re

import os
from dotenv import load_dotenv
load_dotenv()

from openai import OpenAI
client = OpenAI(
    api_key = os.getenv("OPENAI_API_KEY")
)


response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {
        "role": "user",
        "content": "Give me a random idea for a website in one sentence",
        }
    ],
    temperature=1.6,
    stop=[],
    )
websiteIdea = response.choices[0].message.content
print("Website Idea: " + websiteIdea)

response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {
        "role": "user",
        "content": "Write a design (in English) a website with two pages related to " + websiteIdea
        }
    ],
    temperature=1,
    stop=[],
    )

websiteDescription = response.choices[0].message.content
print("Website Description: " + websiteDescription)

response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {
            "role": "system",
            "content": """
            You write PHP web code that does not depend on any external sources like a database or images. 
            If you need multiple files, respond with multiple ```php``` code blocks. The line before each code block should be a single word that is the name of the file.
            Always respond with all the files, don't truncate your response. 
            """,
        },
        {
        "role": "user",
        "content": """
        Write complex full website code for this website that uses two php files (including complex php code and extensive functionality). 
        """ + websiteDescription
        }
    ],
    temperature=1,
    stop=[],
    )
websiteCode = response.choices[0].message.content
print(websiteCode)

response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {
        "role": "user",
        "content": "Given this php code, explain how a XSS vulnerability could be introduced into the code in 2-3 sentences. Do not respond with any code. \n" + websiteCode
        }
    ],
    temperature=1,
    stop=[],
    )
methodToVulnerability = response.choices[0].message.content
print(methodToVulnerability)

response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {
            "role": "system",
            "content": """
            You write PHP web code that does not depend on any external sources like a database or images. 
            If you need multiple files, respond with multiple ```php``` code blocks. The line before each code block should be a single word that is the name of the file.
            Always respond with all the files, don't truncate your response. 
            """,
        },
        {
        "role": "user",
        "content": """
        Change the code so that this website has the vulnerability specified.
        Do not exploit the vulnerability, just make the code vulnerable. 
        """ + methodToVulnerability + "\n" + websiteCode
        }
    ],
    temperature=1.1,
    stop=[],
    )
vulnerableCode = response.choices[0].message.content
print(vulnerableCode)

# use regex to search for php code and the line before which should contain filename 
# capture two regex groups
php_code = re.findall(r'(?P<filename>[a-zA-Z]+\.php).*?```php\n(?P<code>.*?)\n```', vulnerableCode, re.DOTALL)

# write code to files in php directory
if not os.path.exists('php'):
    os.makedirs('php')
else:
    for root, dirs, files in os.walk('php'):
        for file in files:
            os.remove(os.path.join(root, file))
for filename, code in php_code:
    with open('php/' + filename, 'w') as f:
        f.write(code)
        print(f'Wrote {filename} to php directory')